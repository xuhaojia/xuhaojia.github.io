<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[bat批处理文件常见命令]]></title>
      <url>/bat%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>echo</code>:表示显示此命令后的字符</p>
<p><code>tiltle</code>:设置窗口的标题</p>
<p><code>echo off</code>:表示在此语句后所有运行的命令都不显示命令行本身</p>
<p><code>color</code>:设置窗体的颜色，颜色属性由两个十六进制数字组成，第一个对应背景，第二个对应前景。比如<code>color 17</code>表示背景为蓝色，前景为白色。</p>
<p><code>@</code>:与<code>echo off</code>相象，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行（只能影响当前行）。</p>
<p><code>pause</code>:运行此句会暂停批处理的执行并在屏幕上显示<code>Press any key to continue…</code>的提示，等待用户按任意键后继续</p>
<p><code>rem</code>:表示此命令后的字符为注释，不执行，只是给自己今后参考用的（相当于程序中的注释）或者使用 %注释的内容% 来注释单行内容</p>
<p><code>%[1-9]</code>:表示参数，参数是指在运行批处理文件时在文件名后加的以空格（或者<code>Tab</code>）分隔的字符串</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一键安装最新内核并开启 BBR 脚本]]></title>
      <url>/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E5%86%85%E6%A0%B8%E5%B9%B6%E5%BC%80%E5%90%AF-BBR-%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<blockquote>
<p>最近，Google 开源了其<code>TCP BBR</code>拥塞控制算法，并提交到了<code>Linux</code>内核，从 4.9 开始，<code>Linux</code>内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。</p>
<p>根据实地测试，在部署了最新版内核并开启了<code>TCP BBR</code>的机器上，网速甚至可以提升好几个数量级。</p>
</blockquote>
<h1 id="本脚本适用环境"><a href="#本脚本适用环境" class="headerlink" title="本脚本适用环境"></a>本脚本适用环境</h1><ul>
<li>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</li>
<li>虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等</li>
<li>内存要求：≥128M</li>
</ul>
<h1 id="关于本脚本"><a href="#关于本脚本" class="headerlink" title="关于本脚本"></a>关于本脚本</h1><ul>
<li>1、<strong>本文出处</strong>:<a href="https://teddysun.com/489.html" target="_blank" rel="noopener">秋水逸冰</a></li>
<li>2、本脚本已在<code>Vultr</code>上的<code>VPS</code>全部测试通过。</li>
<li>3、当脚本检测到<code>VPS</code>的虚拟方式为<code>OpenVZ</code>时，会提示错误，并自动退出安装。</li>
<li>4、脚本运行完重启发现开不了机的，打开<code>VPS</code>后台控制面板的<code>VNC</code>, 开机卡在<code>grub</code>引导, 手动选择内核即可。</li>
<li>4、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</li>
</ul>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用<code>root</code>用户登录，运行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span><br></pre></td></tr></table></figure>
<p>安装完成后，脚本会提示需要重启<code>VPS</code>，输入<code>y</code>并回车后重启。<br>重启完成后，进入<code>VPS</code>，验证一下是否成功安装最新内核并开启<code>TCP BBR</code>，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>
<p>查看内核版本，含有<code>4.13</code>就表示 OK 了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>返回值一般为：</p>
<p><code>net.ipv4.tcp_available_congestion_control = bbr cubic reno</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>
<p>返回值一般为：</p>
<p><code>net.ipv4.tcp_congestion_control = bbr</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>返回值有<code>tcp_bbr</code>模块即说明<code>bbr</code>已启动。注意：<strong>并不是所有的<code>VPS</code>都会有此返回值，若没有也属正常</strong>。</p>
<h2 id="内核升级方法"><a href="#内核升级方法" class="headerlink" title="内核升级方法"></a>内核升级方法</h2><p>如果是<code>CentOS</code>系统，执行如下命令即可升级内核：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel -y install kernel-ml kernel-ml-devel</span><br></pre></td></tr></table></figure>
<p><code>CentOS 6</code>的话，执行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;s/^default=.*/default=0/g&apos; /boot/grub/grub.conf</span><br></pre></td></tr></table></figure>
<p><code>CentOS 7</code>的话，执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[建站初衷]]></title>
      <url>/171124/</url>
      <content type="html"><![CDATA[<h1 id="前-言"><a href="#前-言" class="headerlink" title="前 言"></a>前 言</h1><blockquote>
<p>这篇文章其实在2天前就应该被发表出来的，但由于第一次使用<code>Hexo</code>,对于连各种命令都看不懂的我，只想在发表文章前，更进一步的把<code>Hexo</code>理解透彻（直白一点就是先搞懂）！</p>
</blockquote>
<h1 id="建站初衷"><a href="#建站初衷" class="headerlink" title="建站初衷"></a>建站初衷</h1><ul>
<li><p>平时使用Blog都是用于转载对自己有用的帖子，起到收录的作用，毕竟好的帖子很值得收藏，主要的原因是记性不好，方便自己今后查看而已，用Blog作为社交平台我历来都没有想过，毕竟兴趣少，技术差，现在搭建<code>Hexo</code>也是此观点，方便自己今后查阅而已！</p>
</li>
<li><p>用<code>Hexo</code>的大部分人，我知道都是在<code>Github</code>上介绍自己项目的<strong>程序员</strong>，而我不是程序员，不光不是，悲催的是连代码都看不懂，说到这儿…心里有万只羊驼奔驰而过；</p>
</li>
<li><p>为啥会选择使用<code>Hexo</code>,主要是无意间看到的<a href="http://onlytimer.com/2017/09/20/Mac%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EGitHub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Mac上搭建基于GitHub的Hexo博客</a>这篇文章后感触很深，也是因为这篇文章的介绍，然后自己找了一些资料来看，又无意间看到下面的内容，让我为搭建<code>Hexo</code>充满了激情；</p>
</li>
</ul>
<blockquote>
<p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写;</p>
<p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客;</p>
<p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管。</p>
</blockquote>
<ul>
<li><p>我很“庆幸”，第二个阶段直接跳过了，在这当中挣扎了很久(<em>若干年</em>)，终究没有实现。为啥？还不是搞不懂，看教程都感觉好复杂的感觉，怕自己花钱后各种没耐心，所以就日复一日年复一年的在第一阶段徘徊到现在咯；</p>
</li>
<li><p>或许有人会问，连代码都看不懂，如何搭建完成并在这当中发布文章呢？</p>
</li>
</ul>
<blockquote>
<p>1、拿这里当项目介绍的各位大咖会认为<code>Hexo</code>的搭建如同吃饭睡觉般简单，但我确实是零基础，当中的曲折程度只能用<strong>艰难</strong>来形容了；</p>
<p>2、搭建完成以为就像<code>Word</code>那样打字、排版、发布！但现实往往是很残酷的，在Mac上搭建好后，又发现了一个问题，我从哪里发布文章呢？Blog的后台从那里进去呢？我要修改主题的话从那里进行呢？等把相关的内容搜索看了一遍后，我又蒙圈了…我所疑惑的所有问题，都TM和搭建一样，还是和代码脱离不了关系啊，行吧！学…修改主题、配置信息、学习<code>Markdown</code>…;</p>
<p>3、就从<a href="http://onlytimer.com/2017/09/20/Mac%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EGitHub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Mac上搭建基于GitHub的Hexo博客</a>给我启示的这篇教程来看，事后觉得确实不是太难，但在以前我是不会去看类似的教程的，只要有多多的代码，马上关掉浏览窗口；</p>
<p>4、有这个勇气看完搭建<code>Hexo</code>的教程，最终并搭建成功,还得益于之前自己亲手搭建的<code>vps</code>服务器，刚开始也是各种不懂，但自己要用啊，硬着头皮找资料，看教程，也就2小时的时间就弄好了；曾经觉得触不可及的东西，亲自动手后，不说学到多少，光事成之后喜悦感和成就感，都是无法用言语来表达的；</p>
</blockquote>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><ul>
<li>开头就说过了，我用Blog的目的也只是方便自己今后查阅相关资料而已，现在发表这篇文章的出发点也是如此；</li>
<li>有合适的教程我也会转载或整理后发布出来；</li>
<li>最近这段时间废寝忘食的学、做…很好的印证了一句话：活到老.学到老</li>
</ul>
<blockquote>
<p>2017年11月24 晚</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
