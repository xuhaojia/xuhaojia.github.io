<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[如何快速登录多个SSH]]></title>
      <url>/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%99%BB%E5%BD%95%E5%A4%9A%E4%B8%AASSH-1/</url>
      <content type="html"><![CDATA[<p>记录这篇文章的出发点在于平时用Mac os登录多个SSH时，难得输入用户名和密码，所以找了相关教程，从而有了这篇文章<br>部分内容参照<a href="https://blog.biezhi.me/2017/08/ssh-no-password-login.html" target="_blank" rel="noopener">此处</a></p>
<blockquote>
<p>什么是SSH？</p>
</blockquote>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="noopener">传送门</a></li>
</ul>
<p>目的<br>在同一台电脑上，登录多个<code>SSH</code>时省去输入用户名和密码的这个环节</p>
<h2 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h2><ul>
<li>生成本地密钥</li>
<li>在自己的操作系统（Mac os）上生成一对SSH 密钥 <code>SSH KEY</code></li>
</ul>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa 		<span class="meta">#生成SSH密钥和公钥</span></span><br></pre></td></tr></table></figure>
<p>这样会在当前目录生成名为<code>id_rsa</code>的私钥文件和名为<code>id_rsa.pub</code>的公钥文件，<code>-t</code>表示密钥类型是<code>rsa</code>。 如果你只输入<code>ssh-keygen</code>生成的RSA密钥长度为<code>2048</code>，如果你对安全性要求比较高可以指定<code>4096</code>位的长度：</p>
<p><code>ssh-keygen -b 4096 -t rsa</code>  ’-b’为多少位 这里密钥长度为 <code>4096</code> 位</p>
<p>按照上述操作后，接下来会有<strong>两个</strong>提示</p>
<blockquote>
<p>第一个提示</p>
</blockquote>
<p>Enter file in which to save the key</p>
<p>意思是让你确认密钥文件保存的路径， 一般回车即可（一般默认会在~/.ssh目录下）</p>
<blockquote>
<p>第二个提示</p>
</blockquote>
<p>Enter passphrase (empty for no passphrase)</p>
<p>意思是让你输入一个密钥的密码，如果不输入则留空；回车生成公私钥完毕。此时你可以使用cat命令看下自己的公私钥。</p>
<ul>
<li>把本地密钥上传到服务器上</li>
</ul>
<p>检查下<code>.ssh</code>目录下<code>authorized_keys</code>文件是否存在，没有的话，创建一个,然后将<code>id_rsa.pub</code>的内容追加到<code>authorized_keys</code>文件</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh 	<span class="comment"># 回到SSH目录</span></span><br><span class="line">touch authorized_keys 	<span class="comment"># 创建authorized_keys文件</span></span><br><span class="line">cat id_rsa.pub <span class="meta">&gt;&gt; </span>authorized_keys 	<span class="comment"># 将id_rsa.pub的内容追加到authorized_keys</span></span><br></pre></td></tr></table></figure>
<p>接下来是配置<code>.ssh</code>目录和<code>authorized_keys</code>文件的权限，否则会提示<code>server refuse you key</code></p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">..</span>    <span class="comment"># 回到主目录</span></span><br><span class="line">chmod 700 <span class="string">.ssh</span>    <span class="comment"># 设置SSH目录权限为700</span></span><br><span class="line">chmod 600 <span class="string">.ssh/authorized_keys</span>    <span class="comment"># 设置authorized_keys文件权限为600，也有文章为400,我设置为前者</span></span><br></pre></td></tr></table></figure>
<ul>
<li>修改SSH配置</li>
</ul>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="meta-keyword">/etc/</span>ssh/sshd_config <span class="meta"># 登录服务器配置一下sshd_config文件内容</span></span><br></pre></td></tr></table></figure>
<p>修改如下，就是把下述内容前两行前面的#取消而已</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">RSAAuthentication</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="string">PubkeyAuthentication</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># but this is overridden so installations will only check .ssh/authorized_keys</span></span><br><span class="line"> </span><br><span class="line"><span class="string">AuthorizedKeysFile</span> <span class="string">.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure>
<p>修改结束后，重启<code>sshd</code></p>
<p><code>service sshd restart</code>或者<code>systemctl restart sshd.service</code></p>
<p>重启结束后，就可以测试一下是不是就可以免密码登录了</p>
<p>如果测试成功，就可以继续修改<code>vi /etc/ssh/sshd_config</code>文件</p>
<p>将<code>PasswordAuthentication</code> 设置为<code>no</code>，禁用密码登录了，比较安全</p>
<p>值得注意的是，一定要确保免密登录成功才能设置为<code>no</code>,否则你会悲剧的，切记.切记！</p>
<ul>
<li>加强篇</li>
</ul>
<blockquote>
<p>上述操作能让你登录SSH时免去输入用户名和密码，但是，依然需要输入IP地址和端口号，接下来我们来实现把IP地址和端口号都省去的步骤</p>
</blockquote>
<p>我们前面生成<code>sshkey</code>的时候还有一个私钥<code>id_rsa</code>没用到，这是干什么用的呢？ 公钥是公开的，任何人都可以获得，私钥则是保密的，只有本地存储了一份</p>
<p>配置本地的<code>ssh</code>，修改<code>vi .ssh/config</code>文件</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host yourserver			 # 我们登录的服务器别名，其目的是为了方便登录 如 SSH1</span><br><span class="line">HostName 10.10.10.100	 # 远端服务器IP地址</span><br><span class="line">Port 258369				 # 远端服务器端口号</span><br><span class="line">User username 			 # 远端服务器用户名</span><br><span class="line">IdentityFile ~/.ssh/id_rsa 	# 你的私钥路径</span><br></pre></td></tr></table></figure>
<blockquote>
<p>最后两步完成快捷登录</p>
<ul>
<li><p>复制私钥 ssh-copy-id 登录用户@服务器IP -p端口</p>
</li>
<li><p>使用 ssh yourserver登录</p>
</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Essence </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何快速登录多个SSH]]></title>
      <url>/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%99%BB%E5%BD%95%E5%A4%9A%E4%B8%AASSH/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[oh-my-zsh升级失败的解决方法]]></title>
      <url>/oh-my-zsh%E5%8D%87%E7%BA%A7%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>今天打开终端之后提示oh-my-zsh可以升级，输入Y之后却提示失败了。<br>错误信息如下：</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Updating Oh My Zsh</span><br><span class="line"><span class="keyword">error: </span>cannot pull with rebase: You have unstaged changes.</span><br><span class="line"><span class="keyword">error: </span>please commit or stash them.</span><br><span class="line">There was an error updating. Try again later?</span><br><span class="line">_update_zsh_update:1: permission denied: /XX/OO/.zsh-update</span><br></pre></td></tr></table></figure>
<ul>
<li>出现这个问题的原因是我们对<code>.oh-my-zsh</code>文件夹里的内容进行了更改之后没有commit。    </li>
<li>通过终端进入<code>.oh-my-zsh</code>目录之后输入<code>git status</code>，发现主题文件发生了更改，但是没有commit：modified: themes/agnoster.zsh-theme</li>
</ul>
<p>解决方法如下:<br>1、首先commit：<code>git add .</code></p>
<p>2、然后：<code>git commit -m &#39;theme change&#39;</code></p>
<p>3、最后：输入<code>git status</code>就会发现目录干净了</p>
<ul>
<li>下次再提示更新的时候，就可以正常升级<code>oh-my-zsh</code>了。</li>
</ul>
<p>导致升级失败的原因:<br><code>oh-my-zsh</code>也是通过命令行从<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">github</a>上下载安装的，更改主题配置的时候确实改动了一些内容，当时没有执行过commit命令，所以才会造成今天的这个问题。</p>
]]></content>
      
        <categories>
            
            <category> Mbp </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac常用的快捷操作方式]]></title>
      <url>/Mac%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%E6%96%B9%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>用Mac也有一段时间了，日常总有一些快捷操作，写在这里算是备忘。</p>
<p><strong>1.</strong> 截屏操作</p>
<ul>
<li><p>截取全屏 <code>Command + Shift + 3</code></p>
</li>
<li><p>自由截取某个区域 <code>Command + Shift + 4</code> (鼠标指定区域)</p>
</li>
<li><p>截取某个窗口 <code>Command + Shift + 4 + Space</code> (按完鼠标会变成相机，然后选中窗口就能截取了，很多人不知道这个截屏产生的图像是带窗口阴影了)</p>
</li>
<li><p>以上三个截取的时候都会产生一个具体的截屏文件在桌面上，如果不想产生这个文件，可以按住快捷键的同时再按住Control，这样产生的截屏就会直接在剪贴板里了。</p>
</li>
</ul>
<p><strong>2.</strong> 一个特别有用的是，经常在打字的时候需要输入一个emoji表情，通常做法都是打开汉字输入法去里面找，Mac下有一个快捷键可以快速打开emoji表情输入 <code>Command + Control + Space</code> 就会弹出emoji表情的搜索框了😀。</p>
<p><strong>3.</strong> 比较通用的一个Option辅助按钮，几乎在任何情况下，按住Option操作都能整出一点出其不意的情况，比如按住Option打开前往会出现用户的资源库，按住Option再按，菜单会有变化，比较常用的是窗口的全屏按钮在按住Option之后再按就是普通的全屏了，反之是恢复，等等。</p>
<p><strong>4.</strong> Finder下前往某个文件夹，<code>Commond + Shift + g</code>，会弹出一个路径输入框，输入具体路径就可以直接打开了，隐藏文件夹也可以。</p>
<p><strong>5.</strong> 按住<code>Option + Shift</code>再调节音量就可以对每个音量的小格子再细微(4小格)的调整。</p>
<p><strong>6.</strong> 按住<code>Command + 鼠标拖动可以拖动当前不是激活状态的窗口</code>，并且也不会激活那个窗口。这个还挺常用的。</p>
<p><strong>7.</strong> 全用<code>MindNode</code>的时候，每个子节点文字多了想换行发现直接Enter不能换行，试了半天才发现按住<code>Option + Enter</code>才是文字里的回车换行。</p>
]]></content>
      
        <categories>
            
            <category> Mbp </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用BestTrace查看VPS的回程]]></title>
      <url>/%E4%BD%BF%E7%94%A8BestTrace%E6%9F%A5%E7%9C%8BVPS%E7%9A%84%E5%9B%9E%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>Ubuntu/Debian：</li>
</ul>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="keyword">get</span> install -y <span class="built_in">zip</span> unzip</span><br><span class="line">wget http:<span class="comment">//source.cc/soft/besttrace.zip</span></span><br></pre></td></tr></table></figure>
<ul>
<li>CentOS：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget zip</span><br><span class="line">wget http:<span class="regexp">//</span>source.cc<span class="regexp">/soft/</span>besttrace.zip</span><br></pre></td></tr></table></figure>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">unzip</span> <span class="selector-tag">besttrace</span><span class="selector-class">.zip</span></span><br></pre></td></tr></table></figure>
<h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +<span class="keyword">x</span> besttrace</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="keyword">besttrace </span>本地<span class="built_in">IP</span></span><br></pre></td></tr></table></figure>
<h3 id="本地IP如何查看"><a href="#本地IP如何查看" class="headerlink" title="本地IP如何查看"></a>本地IP如何查看</h3><ul>
<li>百度直接输入<code>IP</code>即可；</li>
<li>前往<code>www.ipip.net</code>,首页也会显示（推荐）。</li>
</ul>
<blockquote>
<p>使用BestTrace时，有几跳，每跳时哪里，最后总的延迟，也是一模了然的;</p>
<p>如果回程地址用有<code>59.43</code>字段的，即是代表<code>CN2</code>线路。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[安装并配置simple-obfs服务端]]></title>
      <url>/%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEsimple-obfs%E6%9C%8D%E5%8A%A1%E7%AB%AF/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文的主要内容是，在已经安装完 <a href="http://ixuy.top/CentOS%E4%B8%8Bshadowsocks-libev%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/" target="_blank" rel="noopener">Shadowsocks-libev</a> 服务端的情况下，如何手动安装并配置 simple-obfs，以及在此过程中的排错。</p>
<p>转自:<a href="https://teddysun.com/511.html" target="_blank" rel="noopener">秋水逸冰</a></p>
</blockquote>
<ul>
<li><strong>注意：脚本仅支持在 autoconf 版本大于或等于 2.67 的系统里安装（例如不支持 CentOS 6）</strong></li>
</ul>
<blockquote>
<p>手动安装和配置 simple-obfs 服务端</p>
</blockquote>
<ul>
<li>以 CentOS 7 的操作为范例<br>在已经安装<a href="http://ixuy.top/CentOS%E4%B8%8Bshadowsocks-libev%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/" target="_blank" rel="noopener">Shadowsocks-libev</a>的前提下，还需要安装<code>simple-obfs</code>服务端所需的依赖包。<br>有可能还需要安装一下 git 命令。</li>
</ul>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Debian / Ubuntu</span></span><br><span class="line">apt-<span class="keyword">get</span> install -y git</span><br><span class="line"></span><br><span class="line"><span class="meta"># CentOS / Fedora / RHEL</span></span><br><span class="line">yum install -y git</span><br></pre></td></tr></table></figure>
<ul>
<li>下载和安装<code>simple-obfs</code>  </li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt</span></span><br><span class="line">git clone https:<span class="string">//github.com/shadowsocks/simple-obfs.git</span></span><br><span class="line"><span class="keyword">cd</span> simple-obfs</span><br><span class="line">git submodule update <span class="params">--init</span> <span class="params">--recursive</span></span><br><span class="line"><span class="string">./autogen.sh</span></span><br><span class="line"><span class="string">./configure</span> <span class="params">--disable-documentation</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<p><strong>需要特别注意的是，autogen.sh 脚本的配置限制了 <code>autoconf</code> 的版本不能低于 2.67。</strong></p>
<p>如何查看默认 autoconf 的版本号？</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autoconf <span class="comment">--version</span></span><br></pre></td></tr></table></figure>
<p><strong>CentOS 7 的 autoconf 版本为 2.69，符合条件。</strong></p>
<blockquote>
<p>重新配置文件    </p>
</blockquote>
<ul>
<li>重新配置 Shadowsocks-libev 的配置文件 /etc/shadowsocks-libev/config.json</li>
<li>添加如下一行</li>
</ul>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"plugin"</span>:<span class="string">"/usr/local/bin/obfs-server --obfs http"</span></span><br></pre></td></tr></table></figure>
<p><strong>特别注意：请认真参考以下范例，<code>method</code>那行最后不要缺少逗号，不然启动会报错。</strong></p>
<ul>
<li>范例如下：</li>
</ul>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:your_server_port,</span><br><span class="line">    <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"your_password"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"your_encryption_method"</span>,</span><br><span class="line">    <span class="attr">"plugin"</span>:<span class="string">"/usr/local/bin/obfs-server --obfs http"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>然后重新启动 Shadowsocks-libev 即可。</li>
</ul>
<blockquote>
<p>确认 ss-server 和 obfs-server 进程已经正常启动。</p>
</blockquote>
<p>命令如下：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ps</span> -ef | <span class="keyword">grep</span> -v <span class="keyword">grep</span> | <span class="keyword">grep</span> <span class="string">"server"</span></span><br></pre></td></tr></table></figure>
<p>输出结果参考：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>ss-server -u -c <span class="regexp">/etc/</span>shadowsocks-libev<span class="regexp">/config.json -f /</span>var<span class="regexp">/run/</span>shadowsocks-libev.pid</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>obfs-server --obfs http</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS下shadowsocks-libev一键安装脚本]]></title>
      <url>/CentOS%E4%B8%8Bshadowsocks-libev%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文转自:<a href="https://teddysun.com/357.html" target="_blank" rel="noopener">秋水逸冰</a></p>
</blockquote>
<h3 id="为什么使用Shadowsock-libev服务端？"><a href="#为什么使用Shadowsock-libev服务端？" class="headerlink" title="为什么使用Shadowsock-libev服务端？"></a>为什么使用<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener">Shadowsock-libev</a>服务端？</h3><ul>
<li>相比原版<a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="noopener">Shadowsocks</a>，libev(c#)版本提供了更多的特性支持；而关于<a href="https://github.com/shadowsocksr/shadowsocksr" target="_blank" rel="noopener">ShadowsocksR</a>(Python)，Shadowsocks-libev率先支持<strong><a href="https://en.m.wikipedia.org/wiki/Authenticated_encryption" target="_blank" rel="noopener">AEAD</a> Cipher</strong>，并向ShadowsocksR学习引进了<strong><a href="https://github.com/shadowsocksr/obfsplugin" target="_blank" rel="noopener">Obfs</a></strong><a href="https://github.com/shadowsocks/simple-obfs" target="_blank" rel="noopener">(Simple-Obfs)</a>，且提供稳定的周期性更新；长远来看，ShadowsocksR更倾向于向none加密化和Obfs化发展，而Shadowsocks-libev则倾向于向强化Cipher的方向发展，两者有不同的侧重点。简单来说，ShadowsocksR更侧重消除特征以更好穿过GFW，而Shadowsocks-libev则追求更高的安全性，综合起来并无优劣之分；</li>
<li>如何安装和配置simple-obfs服务端，<a href="http://ixuy.top/%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEsimple-obfs%E6%9C%8D%E5%8A%A1%E7%AB%AF/" target="_blank" rel="noopener">点击查看</a>。</li>
</ul>
<h3 id="本脚本适用环境："><a href="#本脚本适用环境：" class="headerlink" title="本脚本适用环境："></a>本脚本适用环境：</h3><ul>
<li>系统支持：CentOS    </li>
<li>内存要求：≥128M    </li>
<li>日期：2017 年 09 月 16 日</li>
</ul>
<h3 id="Shadowsocks-for-Windows-客户端下载："><a href="#Shadowsocks-for-Windows-客户端下载：" class="headerlink" title="Shadowsocks for Windows 客户端下载："></a>Shadowsocks for Windows 客户端下载：</h3><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p>
<h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><ul>
<li>使用root用户登录，运行以下命令：    </li>
</ul>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --<span class="keyword">no</span>-check-certificate -O shadowsocks-libev.<span class="keyword">sh</span> http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/teddysun/shadowsocks_install/master/shadowsocks-libev.<span class="keyword">sh</span>	</span><br><span class="line">chmod +<span class="keyword">x</span> shadowsocks-libev.<span class="keyword">sh</span></span><br><span class="line">./shadowsocks-libev.<span class="keyword">sh</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | tee shadowsocks-libev.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<ul>
<li>安装完成后，脚本提示如下：</li>
</ul>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, Shadowsocks-libev server install completed!</span><br><span class="line">Your Server IP        :your_server_ip</span><br><span class="line">Your Server Port      :your_server_port</span><br><span class="line">Your Password         :your_password</span><br><span class="line">Your Encryption <span class="function"><span class="keyword">Method</span>:</span>your_encryption_method</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> visit:https:<span class="comment">//teddysun.com/357.html</span></span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure>
<h3 id="卸载方法："><a href="#卸载方法：" class="headerlink" title="卸载方法："></a>卸载方法：</h3><ul>
<li>使用 root 用户登录，运行以下命令：</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-libev<span class="selector-class">.sh</span> uninstall</span><br></pre></td></tr></table></figure>
<ul>
<li>安装完成后即已后台启动 Shadowsocks-libev ，运行：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/shadowsocks status</span></span><br></pre></td></tr></table></figure>
<p>可以查看进程是否启动。<br>本脚本安装完成后，会将 Shadowsocks-libev 加入开机自启动。</p>
<h3 id="使用命令："><a href="#使用命令：" class="headerlink" title="使用命令："></a>使用命令：</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动：<span class="meta-keyword">/etc/</span>init.d/shadowsocks start</span><br><span class="line">停止：<span class="meta-keyword">/etc/</span>init.d/shadowsocks stop</span><br><span class="line">重启：<span class="meta-keyword">/etc/</span>init.d/shadowsocks restart</span><br><span class="line">查看状态：<span class="meta-keyword">/etc/</span>init.d/shadowsocks status</span><br></pre></td></tr></table></figure>
<h3 id="默认配置文件"><a href="#默认配置文件" class="headerlink" title="默认配置文件"></a>默认配置文件</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/shadowsocks-libev/<span class="built_in">config</span>.json</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac使用终端命令制作U盘启动]]></title>
      <url>/Mac%E4%BD%BF%E7%94%A8%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E5%88%B6%E4%BD%9CU%E7%9B%98%E5%90%AF%E5%8A%A8/</url>
      <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote>
<ul>
<li>准备一个大于8G的U盘    </li>
<li>下载系统镜像文件    </li>
</ul>
</blockquote>
<ul>
<li>首先把你下载好的系统镜像打开,拖到应用程序里,一定要确保你的应用程序中有系统安装程序</li>
<li>以系统名为<code>macOS High Sierra</code>为例,安装程序名为<code>macOS High Sierra</code>,U盘名为<code>InstallOS</code> ,名字很重要,要确保下方命令和U盘名字一致    </li>
<li>打开终端,输入以下命令        <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="string">/Applications/macOS</span>\ High\ Sierra.app/Contents/Resources/createinstallmedia <span class="params">--volume</span> <span class="string">/Volumes/InstallOS</span> <span class="params">--applicationpath</span> <span class="string">/Applications/macOS</span>\ High\ Sierra.app <span class="params">--nointeraction</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://p07lo02hm.bkt.clouddn.com/U%E7%9B%98%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4.png" alt="U盘命令"></p>
<ul>
<li>详解一下这段命令,红线处为系统安装程序的名字,(请不要忽略空格,这很重要,中间有空开出前面就要加空格),如:安装程序名字是:Install OS X Yosemite,命令红线处要这么写Install\ OS\ X\ Yosemite.app,蓝线是你U盘的名字,格式化的时候起的(不要起中文)</li>
<li>回车后，系统会提示你输入管理员密码，接下来就是等待系统开始制作启动盘了。这时，命令执行中你会陆续看到类似以下的信息：</li>
</ul>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Erasing Disk: <span class="number">0</span>%… <span class="number">10</span>%… <span class="number">20</span>%… <span class="number">30</span>%…<span class="number">100</span>%… </span><br><span class="line">Copying installer files to disk… </span><br><span class="line"><span class="keyword">Copy</span><span class="bash"> complete. </span></span><br><span class="line"><span class="bash">Making disk bootable… </span></span><br><span class="line"><span class="bash">Copying boot files… </span></span><br><span class="line"><span class="bash">Copy complete. </span></span><br><span class="line"><span class="bash">Done.</span></span><br></pre></td></tr></table></figure>
<ul>
<li>当你看到最后有<code>Copy complete</code>和<code>Done</code>字样出现就是表示启动盘已经制作完成了！(命令执行过程大概5分钟左右,期间不要对终端做任何操作,耐心等待就好)</li>
<li>然后重启你的 Mac，然后一直按住<code>「option」(alt)</code>键,选U盘进入就可以装系统了</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Mbp </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MacBook更新后Hexo不能正常发布文章]]></title>
      <url>/MacBook%E6%9B%B4%E6%96%B0%E5%90%8EHexo%E4%B8%8D%E8%83%BD%E6%AD%A3%E5%B8%B8%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</url>
      <content type="html"><![CDATA[<ul>
<li>前两天更新MacBook为最新的macOS High Sierra，本来一切正常使用，直到今天使用Hexo发布帖子时才出现的异常。    </li>
<li>使用<code>hexo d</code>时出现如下提示：    </li>
</ul>
<p><img src="http://p07lo02hm.bkt.clouddn.com/hexo%E9%94%99%E8%AF%AF.png" alt="hexo错误"></p>
<ul>
<li>查了资料才知道是因为缺少<code>xcrun</code>的缘故（不识文化真的好可怕）！   </li>
</ul>
<p>下面为解决方法</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-<span class="keyword">select</span> <span class="comment">--install</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[BBR魔改版教程]]></title>
      <url>/BBR%E9%AD%94%E6%94%B9%E7%89%88%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<ul>
<li><p>背景<br>原版的BBR对于我们来说,速度不太稳定.<br>通过修改BBR源码,调整参数,使其更强劲.<br>为了优化国内与服务器之间的网络质量，loc的大佬专门魔改改进了下这个BBR，成为了新的BBR魔改版。</p>
</li>
<li><p>提醒<br>部分商家的VPS可能会遇到换内核之后无法启动系统的情况，所以请运行脚本前一定要备份好重要数据！！</p>
</li>
<li><p>出处<br>本文转自:<a href="https://www.94ish.me/1635.html" target="_blank" rel="noopener">Linux网络优化加速一键脚本</a></p>
</li>
</ul>
<h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><center><br><img src="http://p07lo02hm.bkt.clouddn.com/BBR%E9%AD%94%E6%94%B9%E8%84%9A%E6%9C%AC.png" alt="一键脚本"><br></center>

<ul>
<li>安装    </li>
</ul>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate <span class="string">"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh"</span> &amp;&amp; chmod +x tcp.<span class="keyword">sh</span> &amp;&amp; ./tcp.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><blockquote>
<p>支持系统</p>
<p>Centos 6+ / Debian 7+ / Ubuntu 14+    </p>
<p>BBR魔改版不支持Debian 8</p>
</blockquote>
<ul>
<li>如果在删除内核环节出现这样一张图<center><br><img src="http://p07lo02hm.bkt.clouddn.com/%E8%AF%AF%E5%88%A0.png" alt=""><br></center>

</li>
</ul>
<blockquote>
<p><strong>注意选择<code>NO</code></strong>    </p>
</blockquote>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>在设置脚本时，设置完毕后都会有选择<code>y/n</code>重启的环节，但选择重启后，都会提示“BBR魔改版”无法启动，这时需要<code>reboot</code>才能正常；    </li>
<li>可通过<code>./tcp.sh</code>命令唤出脚本；</li>
</ul>
<h2 id="查看魔改BBR状态"><a href="#查看魔改BBR状态" class="headerlink" title="查看魔改BBR状态"></a>查看魔改BBR状态</h2><pre><code>sysctl net.ipv4.tcp_available_congestion_control
</code></pre><p>如果看到有<code>tsunami</code>就表示开启成功！</p>
<center><br><img src="http://p07lo02hm.bkt.clouddn.com/%E6%9F%A5%E7%9C%8B%E7%8A%B6%E6%80%81.png" alt=""><br></center>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[搬瓦工VPS端口相关]]></title>
      <url>/%E6%90%AC%E7%93%A6%E5%B7%A5VPS%E7%AB%AF%E5%8F%A3%E7%9B%B8%E5%85%B3/</url>
      <content type="html"><![CDATA[<h3 id="SSH端口修改"><a href="#SSH端口修改" class="headerlink" title="SSH端口修改"></a>SSH端口修改</h3><ul>
<li>输入下面命令：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>ssh<span class="regexp">/sshd_config</span></span><br></pre></td></tr></table></figure>
<ul>
<li>如果提示命令不存在，需要安装vim，以下命令二选一</li>
</ul>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt <span class="keyword">install</span> -y vim</span><br><span class="line">//</span><br><span class="line">yum <span class="keyword">install</span> -y vim</span><br></pre></td></tr></table></figure>
<p>打开配置文件后，找到<code>Port</code>字样，后面一般为5位数字，该数字即为SSH端口，可自定义为任意数字。</p>
<ul>
<li>保存后，重启一下SSH服务。</li>
</ul>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/sshd restart</span></span><br></pre></td></tr></table></figure>
<h3 id="检查SSH端口是否被封"><a href="#检查SSH端口是否被封" class="headerlink" title="检查SSH端口是否被封"></a>检查SSH端口是否被封</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet<span class="built_in"> IP </span>端口</span><br></pre></td></tr></table></figure>
<p>1、如果SSH端口没有被封，大致会显示<code>SSH-2.0-OpenSSH</code>的字样；<br>2、如果端口被封了，那使用<code>telnet</code>命令，自然就连不上咯；<br>3、如果只是端口被封而连接不上，可通过上述修改SSH端口的方法，一般都能恢复如初；<br>4、如果是IP被封的话，那…那存钱吧！</p>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shadowsocks多用户配置方法]]></title>
      <url>/Shadowsocks%E5%A4%9A%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Shadowsocks多用户配置方法（独立端口、密码）</p>
</blockquote>
<ul>
<li><p><strong>编辑配置文件:</strong><br><code>vi /etc/shadowsocks.json</code></p>
</li>
<li><p>插入以下内容（用户数即为端口数，可任意，注意最后一个端口密码后面没有逗号）</p>
</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,     <span class="comment">#服务器IP地址</span></span><br><span class="line">    <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="string">"port_password"</span>:&#123;</span><br><span class="line">        <span class="string">"8381"</span>: <span class="string">"foobar1"</span>,    <span class="comment">#端口号，密码</span></span><br><span class="line">        <span class="string">"8382"</span>: <span class="string">"foobar2"</span>,</span><br><span class="line">        <span class="string">"8383"</span>: <span class="string">"foobar3"</span>,</span><br><span class="line">        <span class="string">"8384"</span>: <span class="string">"foobar4"</span>     <span class="comment">#注意最后一个端口密码后面没有逗号</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>:<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>开机自启动:</strong><br><code>vi /etc/systemd/system/shadowsocks.service</code></li>
</ul>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Shadowsocks</span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">TimeoutStartSec</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">ExecStart</span>=/usr/bin/ssserver -c /etc/shadowsocks.json</span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable <span class="keyword">shadowsocks </span>    <span class="comment">#启用</span></span><br><span class="line">systemctl start <span class="keyword">shadowsocks </span>     <span class="comment">#开始</span></span><br><span class="line">reboot     <span class="comment">#重启服务器</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[VPS服务器前期准备]]></title>
      <url>/VPS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87/</url>
      <content type="html"><![CDATA[<blockquote>
<p>以BWG为例，新购的服务器都比较“干净”，所以要打整（准备）一番…</p>
</blockquote>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 服务器内核、软件更新；</span></span><br><span class="line">yum -y update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 让服务器时间同步为北京（上海）时间</span></span><br><span class="line">cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为之后能顺利安装shadowsocks，还需提前安装wget</span></span><br><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器定时重启，需安装Crontab</span></span><br><span class="line">yum install vixie-cron crontabs</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">chkconfig crond on</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">service crond start</span><br><span class="line"><span class="comment"># 添加crontab定时执行任务</span></span><br><span class="line">crontab -e</span><br><span class="line"><span class="comment"># 0 5表示每天凌晨五点重启</span></span><br><span class="line">0 5 * * * /sbin/reboot</span><br><span class="line"><span class="comment">#重启 crond 服务</span></span><br><span class="line">service crond restart</span><br><span class="line"><span class="comment"># 重启服务器</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Shadowsocks 一键安装脚本（四合一）]]></title>
      <url>/Shadowsocks-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%EF%BC%88%E5%9B%9B%E5%90%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文转载于:<a href="https://teddysun.com/486.html" target="_blank" rel="noopener">秋水逸冰</a></p>
</blockquote>
<h1 id="本脚本适用环境"><a href="#本脚本适用环境" class="headerlink" title="本脚本适用环境"></a>本脚本适用环境</h1><p>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</p>
<p>内存要求：≥128M</p>
<h2 id="关于本脚本"><a href="#关于本脚本" class="headerlink" title="关于本脚本"></a>关于本脚本</h2><p>1、一键安装 <code>Shadowsocks-Python</code>，<code>ShadowsocksR</code>，<code>Shadowsocks-Go</code>，<code>Shadowsocks-libev</code> 版（四选一）服务端；</p>
<p>2、各版本的启动脚本及配置文件名不再重合；</p>
<p>3、每次运行可安装一种版本；</p>
<p>4、支持以多次运行来安装多个版本，且各个版本可以共存（注意端口号需设成不同）；</p>
<p>5、若已安装多个版本，则卸载时也需多次运行（每次卸载一种）；</p>
<p>6、<code>Shadowsocks-Python</code> 和 <code>ShadowsocksR</code> 安装后不可同时启动（因为本质上都属 <strong>Python</strong> 版）。</p>
<h2 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h2><ul>
<li>服务器端口：自己设定（如不设定，默认为 8989）</li>
<li>密码：自己设定（如不设定，默认为 teddysun.com）</li>
<li>加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）</li>
<li>协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）</li>
<li>混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版）</li>
<li>备注：脚本默认创建单用户配置文件，如需配置多用户，请手动修改相应的配置文件后重启即可。</li>
</ul>
<h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><ul>
<li><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">常规版 Windows 客户端</a></p>
</li>
<li><p><a href="https://github.com/shadowsocksr-backup/shadowsocksr-csharp/releases" target="_blank" rel="noopener">ShadowsocksR 版 Windows 客户端</a></p>
</li>
</ul>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用root用户登录，运行以下命令：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --<span class="keyword">no</span>-check-certificate -O shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span> http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/teddysun/shadowsocks_install/master/shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br><span class="line">chmod +<span class="keyword">x</span> shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span></span><br><span class="line">./shadowsocks-<span class="keyword">all</span>.<span class="keyword">sh</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | tee shadowsocks-<span class="keyword">all</span>.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<h3 id="安装完成后，脚本提示如下"><a href="#安装完成后，脚本提示如下" class="headerlink" title="安装完成后，脚本提示如下"></a>安装完成后，脚本提示如下</h3><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, your_shadowsocks_version install completed!</span><br><span class="line">Your Server IP        :your_server_ip</span><br><span class="line">Your Server Port      :your_server_port</span><br><span class="line">Your Password         :your_password</span><br><span class="line">Your Encryption <span class="function"><span class="keyword">Method</span>:</span>your_encryption_method</span><br><span class="line"></span><br><span class="line">Your QR Code: (<span class="keyword">For</span> Shadowsocks Windows, OSX, Android <span class="keyword">and</span> iOS clients)</span><br><span class="line"> ss:<span class="comment">//your_encryption_method:your_password@your_server_ip:your_server_port</span></span><br><span class="line">Your QR Code <span class="keyword">has</span> been saved <span class="keyword">as</span> a PNG file path:</span><br><span class="line"> your_path.png</span><br><span class="line"></span><br><span class="line">Welcome <span class="keyword">to</span> visit:https:<span class="comment">//teddysun.com/486.html</span></span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure>
<h3 id="卸载方法"><a href="#卸载方法" class="headerlink" title="卸载方法"></a>卸载方法</h3><p>若已安装多个版本，则卸载时也需多次运行（每次卸载一种）</p>
<p>使用root用户登录，运行以下命令：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks-all<span class="selector-class">.sh</span> uninstall</span><br></pre></td></tr></table></figure>
<h3 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h3><p><strong>Shadowsocks-Python 版：</strong></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-python start	<span class="meta">#启动</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-python stop	<span class="meta">#停止</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-python restart	<span class="meta">#重启</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-python status	<span class="meta">#查看状态</span></span><br></pre></td></tr></table></figure>
<p><strong>ShadowsocksR 版：</strong></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-r start	<span class="meta">#启动</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-r stop	<span class="meta">#停止</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-r restart		<span class="meta">#重启</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-r status	<span class="meta">#查看状态</span></span><br></pre></td></tr></table></figure>
<p><strong>Shadowsocks-Go 版：</strong></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-go start		<span class="meta">#启动</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-go stop			<span class="meta">#停止</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-go restart		<span class="meta">#重启</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-go status		<span class="meta">#查看状态</span></span><br></pre></td></tr></table></figure>
<p><strong>Shadowsocks-libev 版：</strong></p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-libev start	<span class="meta">#启动</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-libev stop	<span class="meta">#停止</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-libev restart	<span class="meta">#重启</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/shadowsocks-libev status	<span class="meta">#查看状态</span></span><br></pre></td></tr></table></figure>
<h3 id="各版本默认配置文件"><a href="#各版本默认配置文件" class="headerlink" title="各版本默认配置文件"></a>各版本默认配置文件</h3><p>Shadowsocks-Python 版：<code>/etc/shadowsocks-python/config.json</code></p>
<p>ShadowsocksR 版：<code>/etc/shadowsocks-r/config.json</code></p>
<p>Shadowsocks-Go 版：<code>/etc/shadowsocks-go/config.json</code></p>
<p>Shadowsocks-libev 版：<code>/etc/shadowsocks-libev/config.json</code></p>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[去掉（隐藏）mac终端前面的计算机名]]></title>
      <url>/%E5%8E%BB%E6%8E%89%EF%BC%88%E9%9A%90%E8%97%8F%EF%BC%89mac%E7%BB%88%E7%AB%AF%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D/</url>
      <content type="html"><![CDATA[<blockquote>
<p>mac终端（命令行）打开时，在用户名之前会带有一长串的计算机名，太长会影响查看，现给隐藏掉</p>
</blockquote>
<ul>
<li><p>默认是带有当前主机名称和工作路径以及当前登陆用户</p>
</li>
<li><p>打开<code>/etc/bashrc</code></p>
</li>
<li><p>编辑<code>PS1=’\h:\W \u\$</code></p>
</li>
</ul>
<blockquote>
<p><code>\h</code>指的是主机</p>
<p><code>\W</code>指的是当前工作目录</p>
<p><code>\u</code>指的是当前用户</p>
</blockquote>
<p>根据需求可以将其中的某几项给去掉，建议<code>\h</code>,<code>\u</code>可以去掉，<strong><code>\w</code></strong>别去掉。</p>
<ul>
<li>修改之后，变成<code>PS1=&#39;\W \$ &#39;</code>，重启（新）终端</li>
</ul>
<blockquote>
<p>本文转载于:<a href="http://www.liuxiaojia.cc/2016/10/28/environment/%E5%8E%BB%E6%8E%89%EF%BC%88%E9%9A%90%E8%97%8F%EF%BC%89mac%E7%BB%88%E7%AB%AF%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D/" target="_blank" rel="noopener">www.liuxiaojia.cc</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Mbp </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac OS配置SSH密钥登入CentOS]]></title>
      <url>/Mac-OS%E9%85%8D%E7%BD%AESSH%E5%AF%86%E9%92%A5%E7%99%BB%E5%85%A5CentOS/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在连接SSH服务器或者使用<code>scp</code>命令的时候都会感到诸多不便，因为免不了 ssh root@12.12.12.12 然后输入密码。配置密钥登录可以简化整个认证过程避免输入密码，甚至是这样：</p>
</blockquote>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="keyword">my</span></span><br></pre></td></tr></table></figure>
<p>一个回车便能直接登入。</p>
<h1 id="配置和添加"><a href="#配置和添加" class="headerlink" title="配置和添加"></a>配置和添加</h1><ul>
<li><p>产生密钥和公钥</p>
<p>在本地运行：</p>
</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -<span class="selector-tag">b</span> <span class="number">4096</span></span><br></pre></td></tr></table></figure>
<p>一路回车即可在本机创建好公钥和密钥。</p>
<ul>
<li><p>复制公钥到服务器</p>
<p>在本地运行：</p>
</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-<span class="keyword">copy</span>-<span class="built_in">id</span> root@&lt;ip地址&gt;</span><br></pre></td></tr></table></figure>
<p>然后即可将你的公钥复制到服务器并设置好正确的权限。</p>
<p>接下来便可使用：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="tag">&lt;<span class="name">ip地址</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>只需要一个回车即可完成登录，<code>SCP</code>命令同理。</p>
<h1 id="配置别名登录（可选）"><a href="#配置别名登录（可选）" class="headerlink" title="配置别名登录（可选）"></a>配置别名登录（可选）</h1><p>当然你也可以配置别名登录，避免输入用户名和<code>ip</code>地址。</p>
<p>编辑 <strong>本地</strong> ssh配置文件：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/<span class="built_in">config</span></span><br></pre></td></tr></table></figure>
<p>配置示例：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host myos   #别名，可以直接 ssh</span><br><span class="line">HostName 192.168.159.103   #具体的主机地址</span><br><span class="line">User root   #用户</span><br><span class="line">IdentityFile ~/.ssh/id_rsa   #私钥文件</span><br></pre></td></tr></table></figure>
<p><code>:wq</code>保存后，就可以透过：</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh myos</span></span><br></pre></td></tr></table></figure>
<p>这样的命令登录到服务器，<code>scp</code>同理。</p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><ul>
<li><p>登录时提示没有权限</p>
<p>在服务器运行下列命令可以设定权限：</p>
</li>
</ul>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~<span class="string">/.ssh/authorized_keys</span></span><br><span class="line">chmod 700 ~<span class="string">/.ssh</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>私钥无法使用</p>
<p>请使用<code>ssh-keygen -y</code> 回车后指定文件地址，即可登陆。</p>
</li>
</ul>
<blockquote>
<p>本文转载于:<a href="https://liwei2.com/2017/02/21/1016.html" target="_blank" rel="noopener">舞恸零一</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Mbp </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 常用命令简单介绍(基础篇)]]></title>
      <url>/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D-%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      <content type="html"><![CDATA[<center><img src="http://p07lo02hm.bkt.clouddn.com/linux-01.png" alt="linux"></center>

<h1 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h1><h2 id="apt-get-Debian-Ubuntu系统包管理器"><a href="#apt-get-Debian-Ubuntu系统包管理器" class="headerlink" title="apt-get Debian/Ubuntu系统包管理器"></a>apt-get Debian/Ubuntu系统包管理器</h2><p>apt-get 是Debian/Ubuntu系统中 一个用于快速下载/安装的简单命令行管理工具！</p>
<h3 id="参数介绍："><a href="#参数介绍：" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 命令:</span><br><span class="line">update - 检索 新的包列表</span><br><span class="line">upgrade - 升级 可更新的所有软件包</span><br><span class="line">install - 安装 新软件包（pkg是libc6不是libc6.deb）</span><br><span class="line">remove - 删除 软件包</span><br><span class="line">autoremove - 自动删除 所有未使用的软件包</span><br><span class="line">purge - 删除 软件包和配置文件</span><br><span class="line">clean - 清除 已下载的归档文件</span><br><span class="line">autoclean - 清除 旧的下载的档案文件</span><br><span class="line">check - 验证 是否有损坏的依赖</span><br><span class="line">download - 下载 二进制包到当前目录</span><br><span class="line"> </span><br><span class="line"># 选项：</span><br><span class="line">-<span class="ruby">q ：不输出任何信息</span></span><br><span class="line"><span class="ruby">-qq ：除了错误之外，没有输出</span></span><br><span class="line"><span class="ruby">-d ：仅下载，不要安装或解压缩存档</span></span><br><span class="line"><span class="ruby">-y ：对所有确定询问都选择 Yes，并且不提示</span></span><br><span class="line"><span class="ruby">-f ：尝试纠正 被破坏依赖关系的系统</span></span><br><span class="line"><span class="ruby">-m ：如果存档是可定位的，则尝试继续</span></span><br><span class="line"><span class="ruby">-u ：显示升级包的列表</span></span><br><span class="line"><span class="ruby">-b ：在获取源代码包后构建源包</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 apt-get --help 查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例："><a href="#使用示例：" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检索 新的包列表</span></span><br><span class="line">apt-<span class="builtin-name">get</span> update</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 升级 可更新的所有软件包（注意这个命令会升级所有的软件包，所以会升级很长时间）</span></span><br><span class="line">apt-<span class="builtin-name">get</span> upgrade</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 安装 Nginx 软件包</span></span><br><span class="line">apt-<span class="builtin-name">get</span> install nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Nginx 软件包</span></span><br><span class="line">apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Nginx 软件包 并删除所有相关配置文件</span></span><br><span class="line">apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> --purge nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 在安装软件和卸载的时候，为了避免误操作，都会询问是否继续，每次都要输入 y 来确定会很麻烦，可以加上 -y 参数</span></span><br><span class="line"><span class="comment"># 安装 Nginx 软件包 并不显示确定提示</span></span><br><span class="line">apt-<span class="builtin-name">get</span> install nginx -y</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Nginx 软件包，删除所有相关配置文件 并不显示提示</span></span><br><span class="line">apt-<span class="builtin-name">get</span> <span class="builtin-name">remove</span> --purge nginx -y</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 清除 旧的/无用 的软件包</span></span><br><span class="line">apt-<span class="builtin-name">get</span> clean &amp;&amp; apt-<span class="builtin-name">get</span> autoclean</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 下载 Nginx 二进制软件包到当前目录，但不解压和安装</span></span><br><span class="line">apt-<span class="builtin-name">get</span> download nginx -d</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更多的命令可以用 apt-get --help 查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="yum-CentOS系统包管理器"><a href="#yum-CentOS系统包管理器" class="headerlink" title="yum CentOS系统包管理器"></a>yum CentOS系统包管理器</h2><p>yum 是CentOS系统中 一个用于快速下载/安装的简单命令行管理工具！</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令：</span></span><br><span class="line"> </span><br><span class="line">update - 检索 新的包列表</span><br><span class="line">upgrade - 升级 软件包</span><br><span class="line">search - 搜索 软件包</span><br><span class="line">install - 安装 软件包</span><br><span class="line">list - 列出 软件包或者软件包组</span><br><span class="line">info - 显示软件包或者软件包组的详细信息</span><br><span class="line">erase - 删除 软件包（这两个命令一样）</span><br><span class="line">remove - 删除 软件包（这两个命令一样）</span><br><span class="line">groupinfo - 显示 有关包组的详细信息</span><br><span class="line">groupinstall - 安装 软件包组（就像一种软件合集）</span><br><span class="line">grouplist - 列出 可用的软件包组</span><br><span class="line">groupremove - 删除 软件包组</span><br><span class="line">check - 检查 软件包</span><br><span class="line">check-update - 检查 可更新的软件包</span><br><span class="line">clean - 清除 缓存目录内的软件包</span><br><span class="line">deplist - 列出 一个包的依赖关系</span><br><span class="line">distribution-synchronization - 同步 已安装的软件包到最新的版本</span><br><span class="line">downgrad - 降级 一个软件包</span><br><span class="line">reinstall - 重新安装 软件包（自动删除重装）</span><br><span class="line">repolist - 显示 配置的软件包仓库</span><br><span class="line">resolvedep - 确定 软件包需要的依赖关系</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 选项：</span></span><br><span class="line">-t ：容忍错误</span><br><span class="line">-C ：完全从系统缓存运行，不要更新缓存</span><br><span class="line">-R 分钟 ：最大命令等待时间</span><br><span class="line">-q ：安静的操作</span><br><span class="line">-y ：对于所有问题回答是</span><br><span class="line">--nogpgcheck ：禁用gpg签名检查</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更多的命令可以用 yum --help 查看。</span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-1"><a href="#使用示例：-1" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检索 新的包列表</span></span><br><span class="line">yum update</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 安装 Nginx 软件包</span></span><br><span class="line">yum install nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 安装 Development Tools 软件包组（这个软件包组中包含了编译所需的软件）</span></span><br><span class="line"><span class="comment"># 注意：当软件包或者软件包组的名字中包含空格的时候，请把 软件包或软件包组 加上双引号！</span></span><br><span class="line">yum groupinstall <span class="string">"Development Tools"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Nginx 软件包</span></span><br><span class="line">yum erase nginx / yum <span class="builtin-name">remove</span> nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Development Tools 软件包组</span></span><br><span class="line">yum groupremove <span class="string">"Development Tools"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 升级 所有可更新的软件包</span></span><br><span class="line">yum upgrade</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 升级 Nginx 可更新的软件包</span></span><br><span class="line">yum<span class="built_in"> upgrade </span>nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 在安装软件和卸载的时候，为了避免误操作，都会询问是否继续，每次都要输入 y 来确定会很麻烦，可以加上 -y 参数</span></span><br><span class="line"><span class="comment"># 安装 Nginx 软件包 并不显示确定提示</span></span><br><span class="line">yum install nginx -y</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 卸载 Nginx 软件包 并不显示确定提示</span></span><br><span class="line">yum erase nginx -y / yum <span class="builtin-name">remove</span> nginx -y</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 搜索 Nginx 软件包是否存着</span></span><br><span class="line">yum search nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出 可用的软件包</span></span><br><span class="line">yum list</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出 可用的软件包组</span></span><br><span class="line">yum grouplist</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 清除 缓存目录中的所有软件包</span></span><br><span class="line">yum clean</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 清除 缓存目录中的 Nginx 软件包</span></span><br><span class="line">yum clean nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重装 Nginx 软件包</span></span><br><span class="line">yum reinstall nginx</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更多的命令可以用 yum --help 查看。</span></span><br></pre></td></tr></table></figure>
<h1 id="文件-文件夹-操作"><a href="#文件-文件夹-操作" class="headerlink" title="文件/文件夹 操作"></a>文件/文件夹 操作</h1><p>以下除特殊说明，都以当前目录为<code>/root</code>示例。</p>
<h2 id="mkdir-新建-文件夹"><a href="#mkdir-新建-文件夹" class="headerlink" title="mkdir 新建 文件夹"></a>mkdir 新建 文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在当前文件夹新建一个 bash 文件夹，完整的绝对路径就是 /root/bash</span></span><br><span class="line">mkdir bash</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 mkdir --<span class="built_in">help</span> 查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="cd-进入-文件夹"><a href="#cd-进入-文件夹" class="headerlink" title="cd 进入 文件夹"></a>cd 进入 文件夹</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 你当前在 /root目录中，使用这个命令会进入 /root/bash目录，这是相对路径</span></span><br><span class="line"><span class="keyword">cd</span> bash</span><br><span class="line"><span class="comment"># 如果你不在 /root目录中的话，就不能用上面的相对路径了，就需要绝对路径</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/root/bash</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="comment"># 假设你当前在 /root/bash目录中，使用相对路径，你可以用这个命令进入上一级 /root目录， .. 代表相对路径 上级目录</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">..</span></span><br><span class="line"><span class="comment"># 当然你也可以用绝对路径来进入上一级 /root目录</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/root</span></span><br></pre></td></tr></table></figure>
<h2 id="cp-复制或重命名-文件-文件夹"><a href="#cp-复制或重命名-文件-文件夹" class="headerlink" title="cp 复制或重命名 文件/文件夹"></a>cp 复制或重命名 文件/文件夹</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 复制当前目录内的 <span class="keyword">log</span>.txt文件到 /<span class="keyword">var</span>目录</span><br><span class="line">cp <span class="keyword">log</span>.txt /<span class="keyword">var</span>/<span class="keyword">log</span>.txt</span><br><span class="line"># 复制当前目录内的 bash文件夹到 /home目录</span><br><span class="line">cp -R bash /home/bash</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 复制当前目录内的所有.txt后缀的文件到 /<span class="keyword">var</span>/<span class="keyword">log</span>目录</span><br><span class="line">cp *.txt /<span class="keyword">var</span>/<span class="built_in">log</span></span><br><span class="line"># 复制当前目录内的所有以 ixuy开头的文件到 /<span class="keyword">var</span>/<span class="keyword">log</span>目录</span><br><span class="line">cp ixuy* /<span class="keyword">var</span>/<span class="built_in">log</span></span><br><span class="line"># 复制当前目录内的所有以 ixuy开头 以.txt后缀结尾的文件到 /<span class="keyword">var</span>/<span class="keyword">log</span>目录</span><br><span class="line">cp ixuy*.txt /<span class="keyword">var</span>/<span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 假设当前目录是 /root/ixuy/<span class="keyword">log</span>，要把这个目录中的所有.txt后缀的文件复制到上一级目录 /root/ixuy，那么这样做</span><br><span class="line">cp *.txt ..</span><br><span class="line"># .. 就是相对路径，代表上一级目录，当然你也可以用绝对路径，这样更不容易出错</span><br><span class="line">cp *.txt /root/ixuy</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 重命名当前目录内的 <span class="keyword">log</span>.txt文件为 log2.txt</span><br><span class="line">cp <span class="keyword">log</span>.txt log2.txt</span><br><span class="line"># 复制当前目录内的 <span class="keyword">log</span>.txt文件到 /<span class="keyword">var</span>目录并重命名为 log1.txt</span><br><span class="line">cp <span class="keyword">log</span>.txt /<span class="keyword">var</span>/log1.txt</span><br><span class="line"># 复制当前目录内的 bash文件夹到 /home目录并重命名为 bash2</span><br><span class="line">cp -R bash /home/bash2</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 复制当前目录内的 <span class="keyword">log</span>.txt文件到 /<span class="keyword">var</span>目录，但是 /<span class="keyword">var</span> 目录中已经存着 <span class="keyword">log</span>.txt，那么会提示 cp: overwrite `/<span class="keyword">var</span>/<span class="keyword">log</span>.txt'? 可以用 -f 强制覆盖</span><br><span class="line">cp -f <span class="keyword">log</span> /<span class="keyword">var</span>/<span class="keyword">log</span>.txt</span><br><span class="line"># 复制当前目录内的 <span class="keyword">log</span>.txt log1.txt log2.txt文件和 log233目录到 /home/<span class="keyword">log</span>目录中</span><br><span class="line">cp -R <span class="keyword">log</span>.txt log1.txt log2.txt log233 /home/<span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 cp --<span class="keyword">help</span> 查看。</span><br></pre></td></tr></table></figure>
<h2 id="mv-移动或重命名-文件-文件夹"><a href="#mv-移动或重命名-文件-文件夹" class="headerlink" title="mv 移动或重命名 文件/文件夹"></a>mv 移动或重命名 文件/文件夹</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 关于 mv 命令，可以参考上面 cp 的使用方法，没什么区别，只是一个是复制，一个是移动，把上面 cp 命令改成 mv 就能套用了。</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 移动当前目录内的 log.txt文件到 /var目录</span></span><br><span class="line">mv log.txt /<span class="keyword">var</span>/log.txt</span><br><span class="line"><span class="meta"># 移动当前目录内的 bash文件夹到 /home目录</span></span><br><span class="line">mv bash /home/bash</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 重命名当前目录内的 log.txt文件为 log2.txt</span></span><br><span class="line">mv log.txt log2.txt</span><br><span class="line"><span class="meta"># 复制当前目录内的 log.txt文件到 /var目录并重命名为 log1.txt</span></span><br><span class="line">mv log.txt /<span class="keyword">var</span>/log1.txt</span><br><span class="line"><span class="meta"># 复制当前目录内的 bash文件夹到 /home目录并重命名为 bash2</span></span><br><span class="line">mv bash /home/bash2</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 mv --help 查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="rm-删除-文件-文件夹"><a href="#rm-删除-文件-文件夹" class="headerlink" title="rm 删除 文件/文件夹"></a>rm 删除 文件/文件夹</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下的 log.txt文件</span></span><br><span class="line">rm log.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有.txt后缀的文件</span></span><br><span class="line">rm *.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 rm 命令删除时，会提示你是否确定删除，输入 y 即删除，输入 n 则取消</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm: remove regular file `log.txt<span class="string">'? y</span></span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有.txt后缀的文件</span></span><br><span class="line">rm *.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有以 ixuy开头的文件</span></span><br><span class="line">rm ixuy*</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除当前目录下所有以 ixuy开头 以.txt后缀结尾的文件</span></span><br><span class="line">rm ixuy*.txt</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta">#</span><span class="bash"> 当你用 rm 删除目录的时候会发现提示这不是一个文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm: cannot remove `bash<span class="string">': Is a directory</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以加上 -r 来归递删除目录及其目录下的内容</span></span><br><span class="line">rm -r bash</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta">#</span><span class="bash"> 因为为了避免手误删除错误，所以 rm默认是加上了 -i 的参数，也就是每一次删除文件/目录都会提示，如果觉得烦可以用 -rf 参数</span></span><br><span class="line">rm -rf bash</span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf 这个命令请慎重使用，而且千万不要使用 rm -rf / 或者 rm -rf /* 之类的命令(系统自杀)，可能会让你系统爆炸，所以使用请慎重！</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 rm --<span class="built_in">help</span> 查看。</span></span><br></pre></td></tr></table></figure>
<h1 id="查看-编辑文件-操作"><a href="#查看-编辑文件-操作" class="headerlink" title="查看/编辑文件 操作"></a>查看/编辑文件 操作</h1><h2 id="ls-显示目录中文件"><a href="#ls-显示目录中文件" class="headerlink" title="ls 显示目录中文件"></a>ls 显示目录中文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示当前目录下的所有文件</span></span><br><span class="line">ls -a</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令后面加上 绝对路径/相对路径 就会显示指定文件夹内的所有文件</span></span><br><span class="line">ls -a bash/log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 相对路径，当前目录是 /root ，欲查看的目录是 /root/bash/<span class="built_in">log</span></span></span><br><span class="line">ls -a /root/bash/log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 绝对路径， 当前目录是 /root ，欲查看的目录是 /root/bash/<span class="built_in">log</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 ls --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="du-查看-文件-文件夹-占用磁盘空间的大小"><a href="#du-查看-文件-文件夹-占用磁盘空间的大小" class="headerlink" title="du 查看 文件/文件夹 占用磁盘空间的大小"></a>du 查看 文件/文件夹 占用磁盘空间的大小</h2><h3 id="参数介绍：-1"><a href="#参数介绍：-1" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">h ：以人类易读的方式显示</span></span><br><span class="line"><span class="ruby">-a ：显示 目录占用的磁盘空间大小，并显示其下目录和文件占用磁盘空间的大小</span></span><br><span class="line"><span class="ruby">-s ：显示 目录占用的磁盘空间大小，但不显示其下子目录和文件占用的磁盘空间大小</span></span><br><span class="line"><span class="ruby">-c ：显示几个目录或文件占用的磁盘空间大小，还要统计它们的总和</span></span><br><span class="line"><span class="ruby">--apparent-size：显示目录或文件自身的大小</span></span><br><span class="line"><span class="ruby">-l ：统计硬链接占用磁盘空间的大小</span></span><br><span class="line"><span class="ruby">-L ：统计符号链接所指向的文件占用的磁盘空间大小</span></span><br><span class="line"><span class="ruby"><span class="comment"># 待写...</span></span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 du --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-2"><a href="#使用示例：-2" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示 /root 文件夹的大小，但不显示其子目录和文件的大小</span></span><br><span class="line">du -sh</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示 /root 文件夹的大小，并显示其子目录和文件的大小</span></span><br><span class="line">du -ah</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 待写...</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 du --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="cat-查看文件内容"><a href="#cat-查看文件内容" class="headerlink" title="cat 查看文件内容"></a>cat 查看文件内容</h2><h3 id="假设-log-txt文件的内容为："><a href="#假设-log-txt文件的内容为：" class="headerlink" title="假设 log.txt文件的内容为："></a>假设 log.txt文件的内容为：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ixuy233</span><br><span class="line">ixuy</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ixuy666</span><br><span class="line"> </span><br><span class="line">ixuy2366</span><br><span class="line">ixuy8888</span><br></pre></td></tr></table></figure>
<h3 id="查看文件："><a href="#查看文件：" class="headerlink" title="查看文件："></a>查看文件：</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 查看 log.txt文件的所有内容</span><br><span class="line">cat log.txt</span><br><span class="line"># 输出示例如下</span><br><span class="line">ixuy233</span><br><span class="line">ixuy</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ixuy666</span><br><span class="line"> </span><br><span class="line">ixuy2366</span><br><span class="line">ixuy8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对所有行编号</span><br><span class="line">cat -n log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     <span class="number">1</span>	ixuy233</span><br><span class="line">     <span class="number">2</span>	ixuy</span><br><span class="line">     <span class="number">3</span>	</span><br><span class="line">     <span class="number">4</span>	</span><br><span class="line">     <span class="number">5</span>	ixuy666</span><br><span class="line">     <span class="number">6</span>	</span><br><span class="line">     <span class="number">7</span>	ixuy2366</span><br><span class="line">     <span class="number">8</span>	ixuy8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对非空行编号</span><br><span class="line">cat -b log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     <span class="number">1</span>	ixuy233</span><br><span class="line">     <span class="number">2</span>	ixuy</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">     <span class="number">3</span>	ixuy666</span><br><span class="line"> </span><br><span class="line">     <span class="number">4</span>	ixuy2366</span><br><span class="line">     <span class="number">5</span>	ixuy8888</span><br><span class="line"> </span><br><span class="line"># 查看 log.txt文件的所有内容，并对非空行编号，且不输出多行空行</span><br><span class="line">cat -bs log.txt</span><br><span class="line"># 输出示例如下：</span><br><span class="line">     <span class="number">1</span>	ixuy233</span><br><span class="line">     <span class="number">2</span>	ixuy</span><br><span class="line"> </span><br><span class="line">     <span class="number">3</span>	ixuy666</span><br><span class="line"> </span><br><span class="line">     <span class="number">4</span>	ixuy2366</span><br><span class="line">     <span class="number">5</span>	ixuy8888</span><br></pre></td></tr></table></figure>
<h3 id="清空文件："><a href="#清空文件：" class="headerlink" title="清空文件："></a>清空文件：</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 清空当前目录中的 <span class="keyword">log</span>.txt 文件</span><br><span class="line"><span class="keyword">cat</span> /dev/null &gt; <span class="keyword">log</span>.txt</span><br><span class="line"> </span><br><span class="line"># 清空 /<span class="keyword">var</span>目录中的 <span class="keyword">log</span>.txt 文件</span><br><span class="line"><span class="keyword">cat</span> /dev/null &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>.txt</span><br></pre></td></tr></table></figure>
<h3 id="写入文件："><a href="#写入文件：" class="headerlink" title="写入文件："></a>写入文件：</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 写入文本到当前目录中的 <span class="keyword">log</span>.txt文件中(加入文本到文件内容最后)</span><br><span class="line"><span class="keyword">cat</span> &gt;&gt; <span class="keyword">log</span>.txt &lt;&lt;-EOF</span><br><span class="line">doubi</span><br><span class="line">doubi233</span><br><span class="line">doubi666</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"># 清空文件并写入文本到 /<span class="keyword">var</span>目录中的 <span class="keyword">log</span>.txt文件中(先清空后写入)</span><br><span class="line"><span class="keyword">cat</span> &gt; /<span class="keyword">var</span>/<span class="keyword">log</span>.txt &lt;&lt;-EOF</span><br><span class="line">doubi</span><br><span class="line">doubi233</span><br><span class="line">doubi666</span><br><span class="line">EOF</span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 <span class="keyword">cat</span> --<span class="keyword">help</span> 来查看。</span><br></pre></td></tr></table></figure>
<h2 id="head-查看文件内容（主要用于正查）"><a href="#head-查看文件内容（主要用于正查）" class="headerlink" title="head 查看文件内容（主要用于正查）"></a>head 查看文件内容（主要用于正查）</h2><h3 id="参数介绍：-2"><a href="#参数介绍：-2" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">c 数字：显示指定文件的前 xx 字节的内容（bytes）</span></span><br><span class="line"><span class="ruby">-n 数字：显示指定文件的前 xx 行的内容</span></span><br><span class="line"><span class="ruby">-q ：不显示包含指定文件名的文件头（当使用 head打开多个文件的时候，会去在每个文件输出结果的顶部添加一个包含文件名的文件头用于区分）</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 head --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-3"><a href="#使用示例：-3" class="headerlink" title="使用示例："></a>使用示例：</h3><p>假设 log.txt 文件内容为：</p>
<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">doub<span class="keyword">i1</span></span><br><span class="line">doub<span class="keyword">i2</span></span><br><span class="line">doub<span class="keyword">i3</span></span><br><span class="line">doub<span class="keyword">i4</span></span><br><span class="line">doub<span class="keyword">i5</span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的全部内容</span></span><br><span class="line">head log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的前 4字节的内容</span></span><br><span class="line">head -c 4 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">doub</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的前 2行的内容</span></span><br><span class="line">head -n 2 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">doubi1</span><br><span class="line">doubi2</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的从倒数第2行到行首的内容</span></span><br><span class="line">head -n -2 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">doubi1</span><br><span class="line">doubi2</span><br><span class="line">doubi3</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt log1.txt log2.txt文件的前 3行内容</span></span><br><span class="line">head -n 3 log.txt log1.txt log2.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 head --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="tail-查看文件内容（主要用于倒查）"><a href="#tail-查看文件内容（主要用于倒查）" class="headerlink" title="tail 查看文件内容（主要用于倒查）"></a>tail 查看文件内容（主要用于倒查）</h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">c 数字：如果数字为正数(例如 -c +<span class="number">5</span>)，显示指定文件从行首第 xx 字节到最后的内容；如果数字为负数(例如 -c -<span class="number">5</span>)，显示指定文件从行尾第 xx 字节到最后内容。</span></span><br><span class="line"><span class="ruby">-n 数字：如果数字为正数(例如 -c +<span class="number">3</span>)，显示指定文件从行首第 xx 行到最后的内容；如果数字为负数(例如 -c -<span class="number">3</span>)，显示指定文件从行尾第 xx 行到最后的内容。</span></span><br><span class="line"><span class="ruby">-f ：即时输出文件变化后增加的内容，也就是监视一个文件的内容变化（常用于监视日志输出），使用 Ctrl＋C 终止</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 tail --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-4"><a href="#使用示例：-4" class="headerlink" title="使用示例："></a>使用示例：</h3><p>假设 log.txt 文件内容为：</p>
<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">doub<span class="keyword">i1</span></span><br><span class="line">doub<span class="keyword">i2</span></span><br><span class="line">doub<span class="keyword">i3</span></span><br><span class="line">doub<span class="keyword">i4</span></span><br><span class="line">doub<span class="keyword">i5</span></span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的全部内容</span></span><br><span class="line">tail log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件从行首 第25字节到最后的内容</span></span><br><span class="line">tail -c +25 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">bi4</span><br><span class="line">doubi5</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件从行尾 第4字节到最前面的内容</span></span><br><span class="line">tail -c -4 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">bi5</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的从第2行到最后一行的内容</span></span><br><span class="line">tail -n +2 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">doubi2</span><br><span class="line">doubi3</span><br><span class="line">doubi4</span><br><span class="line">doubi5</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt文件的后 2行的内容</span></span><br><span class="line">tail -n -2 log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">doubi4</span><br><span class="line">doubi5</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 持续查看（监视） log.txt文件的变化内容（新增加的内容），使用 Ctrl＋C 终止</span></span><br><span class="line">tail -f log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 log.txt log1.txt log2.txt文件的前 3行内容</span></span><br><span class="line">tail -n 3 log.txt log1.txt log2.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 tail --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="sed-查看-编辑文件内容"><a href="#sed-查看-编辑文件内容" class="headerlink" title="sed 查看/编辑文件内容"></a>sed 查看/编辑文件内容</h2><h3 id="参数介绍：-3"><a href="#参数介绍：-3" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-i ：操作后应用保存到原文件（如果不加这个参数，那么任何修改都不会影响原文件里的内容，只会把结果输出）</span><br><span class="line"><span class="meta">#</span><span class="bash"> 待写...</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 sed --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-5"><a href="#使用示例：-5" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 查看 log.txt 第3行的内容</span></span><br><span class="line">sed <span class="string">'3p'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 查看 log.txt 第2-8行的内容</span></span><br><span class="line">sed <span class="string">'2,8p'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 删除 log.txt 第4行</span></span><br><span class="line">sed -i <span class="string">'4d'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 删除 log.txt 第3-7行</span></span><br><span class="line">sed -i <span class="string">'3,7d'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 删除 log.txt 第1行</span></span><br><span class="line">sed -i <span class="string">'1d'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 删除 log.txt 最后1行</span></span><br><span class="line">sed -i <span class="string">'$d'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 删除 log.txt 文件中所有包含 233内容的行</span></span><br><span class="line">sed -i <span class="string">'/233/d'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 替换 log.txt 文件中所有 233为666</span></span><br><span class="line">sed -i <span class="string">'s/233/666/'</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 替换 log.txt 文件中所有 /ver 为 doubi/，因为有斜杠，所以需要使用 \ 转义，但是单引号会导致无法转义，所以要改成双引号。</span></span><br><span class="line">sed -i <span class="string">"s/\/ver/doubi\//"</span> log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 待写...</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 sed --help 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="vi、vim、nano-编辑文件内容"><a href="#vi、vim、nano-编辑文件内容" class="headerlink" title="vi、vim、nano 编辑文件内容"></a>vi、vim、nano 编辑文件内容</h2><ul>
<li>vi 介绍</li>
</ul>
<p>vi 是Linux很棒的一个文本编辑器，不过也存在一些缺点，比如操作略麻烦。而 vim就相当于 vi的扩展或者加强版，主要介绍 vim。</p>
<ul>
<li>vim 介绍</li>
</ul>
<p>vim 相当于 vi的扩展或者加强版，一些系统只安装了 vi，所以想要用 vim还需要手动安装( yum install vim -y / apt-get install vim -y)，安装 vim后，会自动替换或者说整合 vi。</p>
<p>当你使用 vi 命令的时候，首先进入的是 命令行模式，这个模式就是 vi 自身的功能，而点击 I 键 后就会进入编辑模式(插入模式)，这时候就可以直接输入字符了，这个就是 vim的扩展功能了。当修改完成后，按 ESC键 即可退出编辑模式回到命令行模式，这时候输入 :wq 并回车代表保存并退出，如果不想保存可以使用 :q! 不保存强制退出。</p>
<p>vim的命令行 命令很多，我也没打算都写出来，只写出最常用的好了。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开当前目录下的 log.txt文件，如果没有那么会新建 log.txt文件（安装vim后，使用 vi和 vim打开文件没区别）</span></span><br><span class="line">vi log.txt</span><br><span class="line">vim log.txt</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 在命令行模式下，直接输入以下 符号和字母(区分大小写)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 进入编辑模式（插入模式，按 Esc键 即可返回命令行模式）</span></span></span><br><span class="line">i</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 删除光标当前所在的一行</span></span></span><br><span class="line">dd</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 删除文件内所有内容</span></span></span><br><span class="line">dddG</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 复制光标当前所在的一行</span></span></span><br><span class="line">yy</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 粘贴刚才复制的一行内容</span></span></span><br><span class="line">p</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 撤销上个操作（误操作可以用这个恢复）</span></span></span><br><span class="line">u</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 保存当前文件（ : 是英文的冒号）</span></span></span><br><span class="line">:w</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 另存当前文件内容为 log2.txt</span></span></span><br><span class="line">:w log2.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 退出当前文件</span></span></span><br><span class="line">:q</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 不保存 并强制退出当前文件</span></span></span><br><span class="line">:q!</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 保存并退出当前文件</span></span></span><br><span class="line">:wq</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 vi --<span class="built_in">help</span> / vim --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<ul>
<li>nano 介绍</li>
</ul>
<p>nano 我挺少用的，一些系统也默认安装了这个 文本编辑器，在一些地方比 vim好用，不过我已经习惯了 vim。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开当前目录下的 log.txt文件，如果没有那么会新建 log.txt文件</span></span><br><span class="line">nano log.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入后直接就可以输入修改文本内容了，修改后我们可以使用这个 按键保存内容</span></span><br><span class="line">Ctrl+O</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果不需要编辑了，那么可以用这个 按键退出当前文件</span></span><br><span class="line">Ctrl+X</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果你在退出前已经修改但没有保存，那么会提醒你是否保存，如果保存就输入 y ，不保存输入 n</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 然后就会让你输入要保存的文件名（默认原文件名，所以直接按 Enter回车即可，除非你要另存为其他文件名）</span></span><br><span class="line">Enter</span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 nano --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h1 id="解压缩-操作"><a href="#解压缩-操作" class="headerlink" title="解压缩 操作"></a>解压缩 操作</h1><p>在Linux中经常会下载到压缩文件，而压缩文件的格式有很多，比如 zip、rar、gz、xz、tar.gz、tar.xz等。</p>
<p>比较常见的就是各种 .tar、.tar.xz、.tar.gz、.tar.bz、.tar.bz2、.tar.Z 后缀压缩包，这几个的解压缩命令基本一样，说明一下参数的意义。</p>
<p>tar 本身只是一个打包的作用，而 .tar 后面的 .zx / .gz / .bz 等等才是压缩格式，也就是比如 log.tar.gz 压缩包，就是先用 .tar 把指定文件/文件夹打包到一起，然后再用 gz 来压缩打包后的 .tar 为 .tar.gz 。</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">x 是从压缩文件提取(解压)文件出来，所以在解压命令中都有这个参数。</span></span><br><span class="line"><span class="ruby">-c ：创建一个新的压缩包文件，所以在压缩命令中都有这个参数。</span></span><br><span class="line"><span class="ruby">-f ：指定要解压的压缩包文件或要压缩的文件/文件夹，所以这个参数必须放在 解压缩命令参数的最后，然后后面跟着 要解压到压缩包文件或要压缩的文件/文件夹。</span></span><br><span class="line"><span class="ruby">-j ：解压缩 bz / bz2 格式的参数</span></span><br><span class="line"><span class="ruby">-J ：解压缩 xz / lzip 格式的参数</span></span><br><span class="line"><span class="ruby">-z ：解压缩 gz / tgz 格式的参数</span></span><br><span class="line"><span class="ruby">-Z ：解压缩 Z 格式的参数</span></span><br><span class="line"><span class="ruby">-v ：详细列出解压缩过程中处理的文件</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 tar --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h2 id="tar-gz-zip等-解压-压缩包-示例"><a href="#tar-gz-zip等-解压-压缩包-示例" class="headerlink" title="tar gz zip等 解压 压缩包 示例"></a>tar gz zip等 解压 压缩包 示例</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 解压后缀为 .tar 的压缩包</span></span><br><span class="line">tar -xf <span class="built_in">log</span>.tar</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .tar.xz 的压缩包</span></span><br><span class="line">tar -xJf <span class="built_in">log</span>.tar.xz</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .tar.gz 的压缩包，有两个方法</span></span><br><span class="line">tar -xzf <span class="built_in">log</span>.tar.gz</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .gz 的压缩包，有两个方法，如提示命令不存在，请安装 yum install gzip -y / apt-get install gzip -y</span></span><br><span class="line">gzip -d <span class="built_in">log</span>.gz</span><br><span class="line">gunzip <span class="built_in">log</span>.gz</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .bz / .bz2 / tar.bz2 的压缩包，有两个方法</span></span><br><span class="line">bzip2 -d <span class="built_in">log</span>.bz</span><br><span class="line">bunzip2 <span class="built_in">log</span>.bz</span><br><span class="line">tar -jxf <span class="built_in">log</span>.tar.bz</span><br><span class="line"> </span><br><span class="line">bzip2 -d <span class="built_in">log</span>.bz2</span><br><span class="line">bunzip2 <span class="built_in">log</span>.bz2</span><br><span class="line">tar -jxf <span class="built_in">log</span>.tar.bz2</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .Z / tar.Z 的压缩包，有两个方法</span></span><br><span class="line">uncompress <span class="built_in">log</span>.Z <span class="built_in">log</span>.txt</span><br><span class="line">uncompress <span class="built_in">log</span>.Z <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line">tar xZf <span class="built_in">log</span>.tar.Z <span class="built_in">log</span>.txt</span><br><span class="line">tar xZf <span class="built_in">log</span>.tar.Z <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .rar 的压缩包，如提示命令不存在，请安装 yum install unrar -y / apt-get install unrar -y ，注意 rar 和 unrar 是分开的</span></span><br><span class="line">unrar x <span class="built_in">log</span>.rar</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"><span class="meta"># 解压后缀为 .zip 的压缩包，如提示命令不存在，请安装 yum install unzip -y / apt-get install unzip -y，注意 zip 和 unzip 是分开的</span></span><br><span class="line">unzip <span class="built_in">log</span>.zip</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 tar --help / gzip --help / unrar --help / unzip --help 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="压缩-文件-文件夹-示例"><a href="#压缩-文件-文件夹-示例" class="headerlink" title="压缩 文件/文件夹 示例"></a>压缩 文件/文件夹 示例</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.tar 压缩包</span><br><span class="line">tar -<span class="keyword">cf</span> <span class="keyword">log</span>.tar <span class="keyword">log</span>.txt</span><br><span class="line">tar -<span class="keyword">cf</span> <span class="keyword">log</span>.tar <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 如果要压缩多个文件和文件夹，那么只需要在后面一直加下去即可</span><br><span class="line">tar -<span class="keyword">cf</span> <span class="keyword">log</span>.tar <span class="keyword">log</span>.txt doub.txt <span class="keyword">log</span> bash</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.tar.xz 压缩包，以下的其他后缀压缩命令都是一样</span><br><span class="line">tar -cJf <span class="keyword">log</span>.tar.xz <span class="keyword">log</span>.txt</span><br><span class="line">tar -cJf <span class="keyword">log</span>.tar.xz <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.tar.gz 压缩包</span><br><span class="line">tar -czf <span class="keyword">log</span>.tar.gz <span class="keyword">log</span>.txt</span><br><span class="line">tar -czf <span class="keyword">log</span>.tar.gz <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.gz 压缩包</span><br><span class="line">gzip <span class="keyword">log</span>.gz <span class="keyword">log</span>.txt</span><br><span class="line">gzip <span class="keyword">log</span>.gz <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.tar.bz 压缩包</span><br><span class="line">暂时没查到</span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.bz / <span class="keyword">log</span>.tar.bz / <span class="keyword">log</span>.bz2 / <span class="keyword">log</span>.tar.bz2压缩包</span><br><span class="line">bzip2 -z <span class="keyword">log</span>.txt</span><br><span class="line">bzip2 -z <span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line">tar cjf <span class="keyword">log</span>.tar.bz2 <span class="keyword">log</span>.txt</span><br><span class="line">tar cjf <span class="keyword">log</span>.tar.bz2 <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.Z / <span class="keyword">log</span>.tar.Z 压缩包</span><br><span class="line"><span class="keyword">compress</span> <span class="keyword">log</span>.txt</span><br><span class="line"><span class="keyword">compress</span> <span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line">tar cZf <span class="keyword">log</span>.tar.Z <span class="keyword">log</span>.txt</span><br><span class="line">tar cZf <span class="keyword">log</span>.tar.Z <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.rar 压缩包，如提示命令不存在，请安装 yum install rar -y / apt-get install rar -y ，注意 rar 和 unrar 是分开的</span><br><span class="line">unrar a <span class="keyword">log</span>.rar <span class="keyword">log</span>.txt</span><br><span class="line">unrar a <span class="keyword">log</span>.rar <span class="built_in">log</span></span><br><span class="line">————————————————————————————————————————————————————————————————————————————</span><br><span class="line"># 分别压缩当前目录下的 <span class="keyword">log</span>.txt文件 / <span class="keyword">log</span>文件夹为 <span class="keyword">log</span>.<span class="keyword">zip</span> 压缩包，如提示命令不存在，请安装 yum install <span class="keyword">zip</span> -y / apt-get install <span class="keyword">zip</span> -y ，注意 <span class="keyword">zip</span> 和 unzip 是分开的</span><br><span class="line"><span class="keyword">zip</span> <span class="keyword">log</span>.<span class="keyword">zip</span> <span class="keyword">log</span>.txt</span><br><span class="line"><span class="keyword">zip</span> <span class="keyword">log</span>.<span class="keyword">zip</span> <span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"># 更多的命令可以用 tar --<span class="keyword">help</span> / gzip --<span class="keyword">help</span> / rar --<span class="keyword">help</span> / <span class="keyword">zip</span> --<span class="keyword">help</span> 来查看。</span><br></pre></td></tr></table></figure>
<h1 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h1><h2 id="wget-下载工具"><a href="#wget-下载工具" class="headerlink" title="wget 下载工具"></a>wget 下载工具</h2><p>wget 是Linux系统最常用的工具之一，命令行方式的多功能下载工具，支持HTTP，HTTPS和FTP协议。</p>
<h3 id="参数介绍：-4"><a href="#参数介绍：-4" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 只介绍最常用的参数</span><br><span class="line"># 如果提示命令不存在，那么使用 yum install wget -y / apt-get install wget -y 来安装（有一些非常精简的系统可能会没装）</span><br><span class="line"> </span><br><span class="line">-<span class="ruby">b ：启动后，后台下载</span></span><br><span class="line"><span class="ruby">-q ：安静模式（不输出任何信息）</span></span><br><span class="line"><span class="ruby">-c ：断点续传下载文件</span></span><br><span class="line"><span class="ruby">-O ：指定下载后的文件名（可使用绝对路径目录+文件名）</span></span><br><span class="line"><span class="ruby">-P ：指定下载后的文件目录（-P只能指定下载目录，并不能指定文件名）</span></span><br><span class="line"><span class="ruby">-t ：设置重试次数（<span class="number">0</span>代表无限）</span></span><br><span class="line"><span class="ruby">-T ：设置超时时间（单位：秒）</span></span><br><span class="line"><span class="ruby">-N ：只获取比本地新的文件（新的覆盖旧的）</span></span><br><span class="line"><span class="ruby">-<span class="number">4</span> ：仅连接至 IPv4地址</span></span><br><span class="line"><span class="ruby">-<span class="number">6</span> ：仅连接至 IPv6地址</span></span><br><span class="line"><span class="ruby">--limit-rate=xxxk <span class="symbol">:</span>限制下载速度（k代表KB/S）</span></span><br><span class="line"><span class="ruby">--post-data ：通过POST方式发送数据</span></span><br><span class="line"><span class="ruby">--no-check-certificate ：不验证服务器的SSL证书</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 wget --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-6"><a href="#使用示例：-6" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 下载一个文件到当前目录</span></span><br><span class="line">wget https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到当前目录并重命名为 200MB.bin</span></span><br><span class="line">wget -O <span class="string">"200MB.bin"</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到 /root目录（-P只能指定下载目录，并不能指定文件名）</span></span><br><span class="line">wget -P <span class="string">"/root"</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到 /root/doubi目录并重命名为 200MB.bin</span></span><br><span class="line">wget -O <span class="string">"/root/doubi/200MB.bin"</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件完成之前 wget进程结束了，那么可以使用断点续传重新下载中断的文件（前提是下载服务器支持断点续传）</span></span><br><span class="line">wget -c https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"><span class="meta"># 通过后台下载文件到 /root/doubi目录并重命名为 200MB.bin</span></span><br><span class="line">wget -b -O <span class="string">"/root/doubi/200MB.bin"</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"><span class="meta"># Continuing in background, pid 2333.</span></span><br><span class="line"><span class="meta"># Output will be written to `wget-log'.</span></span><br><span class="line"><span class="meta"># 后台下后，你可以使用以下命令来查看下载进度：</span></span><br><span class="line">tail -f wget-log</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 有时候一些Linux系统中的SSL证书不完整，会导致下载一些 HTTPS网站文件的时候会验证SSL证书失败，可以这样做</span></span><br><span class="line"><span class="meta"># 不验证服务器SSL证书，下载文件到当前目录并重命名为 200MB.bin</span></span><br><span class="line">wget --no-check-certificate -O <span class="string">"200MB.bin"</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 使用wget发送POST请求数据</span></span><br><span class="line">wget --post-data <span class="string">"user=doubi&amp;passwd=23333"</span> https:<span class="comment">//xxx.xx/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到当前目录 并仅通过IPv4连接 只获取比本地新的文件，限速 200KB/S</span></span><br><span class="line">wget --limit-rate=<span class="number">200</span>k -N <span class="number">-4</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到当前目录 并重试次数为 1，超时时间为 2秒</span></span><br><span class="line">wget -t1 -T2 https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 通过 wget来获取服务器的外网IP（-qO- 代表运行完会输出下载的信息，并不会保存到本地文件）</span></span><br><span class="line">wget -qO- ipinfo.io/ip</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 wget --help 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="curl-下载工具"><a href="#curl-下载工具" class="headerlink" title="curl 下载工具"></a>curl 下载工具</h2><p>curl是Linux系统一个利用URL规则在命令行下工作的文件传输工具，是一款很强大的HTTP命令行工具。它支持文件的上传和下载，是综合传输工具，但习惯称curl为下载工具。</p>
<h3 id="参数介绍：-5"><a href="#参数介绍：-5" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 只介绍最常用的参数</span><br><span class="line"># 如果提示命令不存在，那么使用 yum install curl -y / apt-get install curl -y 来安装（有一些非常精简的系统可能会没装）</span><br><span class="line"> </span><br><span class="line">-<span class="ruby">s ：安静模式（不会输出任何信息）</span></span><br><span class="line"><span class="ruby">-C ：断点续传下载文件</span></span><br><span class="line"><span class="ruby">-o ：输出写入到文件中</span></span><br><span class="line"><span class="ruby">-O ：输出写入到文件，文件名为 远程文件的名称</span></span><br><span class="line"><span class="ruby">-k ：不验证服务器SSL证书</span></span><br><span class="line"><span class="ruby">-T ：上传文件</span></span><br><span class="line"><span class="ruby">-<span class="number">4</span> ：仅连接至 IPv4地址</span></span><br><span class="line"><span class="ruby">-<span class="number">6</span> ：仅连接至 IPv6地址</span></span><br><span class="line"><span class="ruby">-m ：设置传输总时间（单位：秒）</span></span><br><span class="line"><span class="ruby">--<span class="keyword">retry</span> ：设置重试次数</span></span><br><span class="line"><span class="ruby">--data ：通过POST方式发送数据</span></span><br><span class="line"><span class="ruby">--limit-rate xxxK ：限制下载速度（K代表KB/S）</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 curl --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-7"><a href="#使用示例：-7" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 获取当前服务器的外网IP</span></span><br><span class="line">curl ipinfo.io/ip</span><br><span class="line"> </span><br><span class="line"><span class="meta"># 获取一个文件保存到当前目录中</span></span><br><span class="line">wget -O https:<span class="comment">//softs.fun/Bash/ssr.sh</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 获取一个文件保存到 /root/doubi目录中 并修改文件名为 233.sh</span></span><br><span class="line">curl -o <span class="string">"/root/doubi/233.sh"</span> https:<span class="comment">//softs.fun/Bash/ssr.sh</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件完成之前 curl进程结束了，那么可以使用断点续传重新下载中断的文件（前提是下载服务器支持断点续传）</span></span><br><span class="line">curl -C -O https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 有时候一些Linux系统中的SSL证书不完整，会导致访问/下载一些 HTTPS网站/文件的时候会验证SSL证书失败，可以这样做</span></span><br><span class="line"><span class="meta"># 不验证服务器SSL证书，下载文件到当前目录并重命名为 233.sh</span></span><br><span class="line">curl -k -o <span class="string">"233.sh"</span> https:<span class="comment">//softs.fun/Bash/ssr.sh</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 使用curl发送GET请求数据</span></span><br><span class="line">curl https:<span class="comment">//xxx.xx/?user=doubi</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 使用curl发送POST请求数据</span></span><br><span class="line">curl --data <span class="string">"user=doubi&amp;passwd=23333"</span> https:<span class="comment">//xxx.xx/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到当前目录 并仅通过IPv4连接，限速 200KB/S</span></span><br><span class="line">curl --limit-rate <span class="number">200</span>K <span class="number">-4</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 下载文件到当前目录 并重试次数为 1，超时时间为 2秒</span></span><br><span class="line">curl --retry <span class="number">1</span> -m <span class="number">10</span> https:<span class="comment">//softs.fun/100MB.bin</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 curl --help 来查看。</span></span><br></pre></td></tr></table></figure>
<h2 id="netstat-查看链接和端口监听等信息"><a href="#netstat-查看链接和端口监听等信息" class="headerlink" title="netstat 查看链接和端口监听等信息"></a>netstat 查看链接和端口监听等信息</h2><h3 id="参数介绍：-6"><a href="#参数介绍：-6" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">n ：不显示别名（主机名/域名以 数字或IP显示）</span></span><br><span class="line"><span class="ruby">-e ：显示其他/更多信息</span></span><br><span class="line"><span class="ruby">-p ：显示进程PID/进程名</span></span><br><span class="line"><span class="ruby">-c ：持续输出（设置后会每隔 <span class="number">1</span>秒输出一次，Ctrl+C 终止）</span></span><br><span class="line"><span class="ruby">-l ：显示正在监听的套接字</span></span><br><span class="line"><span class="ruby">-a ：显示全部信息</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 下面这些就不很常用了。</span></span></span><br><span class="line"><span class="ruby">-r ：显示路由表</span></span><br><span class="line"><span class="ruby">-i ：显示网络接口（网卡）</span></span><br><span class="line"><span class="ruby">-g ：显示多播组信息</span></span><br><span class="line"><span class="ruby">-s ：显示网络统计</span></span><br><span class="line"><span class="ruby">-M ：显示伪装连接</span></span><br><span class="line"><span class="ruby">-v ：显示正在进行的工作</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 netstat --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-8"><a href="#使用示例：-8" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示当前服务器的所有连接信息</span></span><br><span class="line">netstat -a</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示当前服务器的所有 TCP连接信息</span></span><br><span class="line">netstat -at</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 显示当前服务器的所有 UDP连接信息</span></span><br><span class="line">netstat -au</span><br></pre></td></tr></table></figure>
<h1 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h1><h2 id="kill-结束进程"><a href="#kill-结束进程" class="headerlink" title="kill 结束进程"></a>kill 结束进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 当我们想要结束一个进程的时候，我们可以用 <span class="built_in">kill</span> 命令</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> PID是每个进程的一个唯一标识符，可以使用上面的 ps 命令来查看你要结束进程的PID。</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 假设我们要结束 Nginx的进程，那么这样做（ grep -v grep 表示排除关键词grep，因为使用 grep匹配ssh，也会把grep自己的进程匹配进去的）：</span></span><br><span class="line">ps -ef|grep -v grep|grep "nginx"</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">UID PID PPID C STIME TTY TIME CMD #注意使用上面命令的话是不会显示表头这一行的，我只是为了更好理解加上的</span><br><span class="line">root 2356 1 0 04/03 ? 00:03:12 nginx</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 然后我们可以看到第二列的 PID 进程标识符，然后我们 <span class="built_in">kill</span> 即可。</span></span><br><span class="line">kill -9 2356</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 中断进程 -2 相当于 程序运行在前台，然后输入 Ctrl+C 的效果，但是进程有权利忽略，所以不一定能结束进程</span></span><br><span class="line">kill -2 PID</span><br><span class="line"><span class="meta">#</span><span class="bash"> 强制结束进程 -9 ，注意：强制结束某个进程后，可能会造成进程数据丢失等问题！</span></span><br><span class="line">kill -9 PID</span><br></pre></td></tr></table></figure>
<h2 id="free-查看内存使用信息"><a href="#free-查看内存使用信息" class="headerlink" title="free 查看内存使用信息"></a>free 查看内存使用信息</h2><h3 id="参数介绍：-7"><a href="#参数介绍：-7" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">b ：以 字节(bytes/B) 为单位显示</span></span><br><span class="line"><span class="ruby">-k ：以 KB 为单位显示</span></span><br><span class="line"><span class="ruby">-m ：以 MB 为单位显示</span></span><br><span class="line"><span class="ruby">-g ：以 GB 为单位显示</span></span><br><span class="line"><span class="ruby">--tera ：以 TB 为单位显示</span></span><br><span class="line"><span class="ruby">-h ：以 人类易读的方式输出</span></span><br><span class="line"><span class="ruby">--si ：以 <span class="number">1000</span>为单位转换，而不是 <span class="number">1024</span>（<span class="number">1</span>MB=<span class="number">1</span>*<span class="number">1024</span>KB改成 <span class="number">1</span>MB=<span class="number">1</span>*<span class="number">1000</span>KB）</span></span><br><span class="line"><span class="ruby">-t ：显示 内存总数 行</span></span><br><span class="line"><span class="ruby">-s 时间 ：每隔 X秒输出一次（重复输出监视内存，使用 Ctrl+C 终止）</span></span><br><span class="line"><span class="ruby">-c 次数 ：每隔 <span class="number">1</span>秒输出 X次</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 free --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-9"><a href="#使用示例：-9" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 显示当前系统内存（默认 free = free -k，单位为 KB）</span></span><br><span class="line">free</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:        250872     237752      13120          0      34620      70520</span><br><span class="line">-/+ buffers/cache:     132612     118260</span><br><span class="line">Swap:       643064       1744     641320</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 以单位 B/KB/MB/GB/TG 显示当前系统内存</span></span><br><span class="line">free -b / free -k / free -m / free -g / free --tera</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 以人类易读的方式 显示当前系统内存</span></span><br><span class="line">free -h</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出示例</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          244M       232M        12M         0B        33M        68M</span><br><span class="line">-/+ buffers/cache:       129M       115M</span><br><span class="line">Swap:         627M       1.7M       626M</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 以 1000为单位转换并使用 MB为单位 显示当前系统内存（1MB=1*1024KB改成 1MB=1*1000KB）</span></span><br><span class="line">free -m --si</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 每隔 3秒并使用 MB为单位 显示一次当前系统内存</span></span><br><span class="line">free -ms 3</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 每隔 1秒并使用 MB为单位 显示 5次当前系统内存</span></span><br><span class="line">free -mc 5</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 每隔 2秒并使用 MB为单位 总共显示 6次当前系统内存</span></span><br><span class="line">free -m -c 6 -s 2</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 更多的命令可以用 free --<span class="built_in">help</span> 来查看。</span></span><br></pre></td></tr></table></figure>
<h3 id="表头解释："><a href="#表头解释：" class="headerlink" title="表头解释："></a>表头解释：</h3><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 说明示例</span></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line"><span class="attribute">Mem</span>:          244M       232M        12M         0B        33M        69M</span><br><span class="line"><span class="literal">-/+ buffers/cache:       129M       115M</span></span><br><span class="line"><span class="attribute">Swap</span>:         627M       1.7M       626M</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Mem 行，表示物理内存统计</span></span><br><span class="line">total :系统 总物理内存</span><br><span class="line">used :系统 已分配物理内存（但非全部都在使用，包含buffers好cached）</span><br><span class="line">free :系统 未分配物理内存</span><br><span class="line">shared :系统 共享内存，一般都是 0</span><br><span class="line">buffers :系统 分配但未使用的 buffers数量</span><br><span class="line">cached :系统 分配但未使用的 cached数量</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> -/+ buffers/cache 行，表示物理内存的缓存统计</span></span><br><span class="line">used :系统 实际使用的内存</span><br><span class="line"><span class="meta">#</span><span class="bash"> user= Mem行 used-buffers-cached（232-33-69=130，因单位转换问题 所以会有一点差距）</span></span><br><span class="line">free :系统 实际可用的内存</span><br><span class="line"><span class="meta">#</span><span class="bash"> free= Mem行 free+buffers+cached（12+33+69=114，因单位转换问题 所以会有一点差距）</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> 所以我们看系统的真实 使用/剩余内存 只需要看这一行即可！</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> Swap 行，表示硬盘的交换分区（虚拟内存）统计</span></span><br><span class="line">total :系统 总虚拟内存</span><br><span class="line">used :系统 已分配虚拟内存</span><br><span class="line">free :系统 未分配虚拟内存</span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash"> KVM虚拟化的VPS，可以用这个教程手动添加 SWAP虚拟内存：https://doub.io/linux-jc7/</span></span><br></pre></td></tr></table></figure>
<h2 id="date-查看-设置-系统时间"><a href="#date-查看-设置-系统时间" class="headerlink" title="date 查看/设置 系统时间"></a>date 查看/设置 系统时间</h2><h3 id="参数介绍：-8"><a href="#参数介绍：-8" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">d ：以指定的时间格式 显示时间</span></span><br><span class="line"><span class="ruby"> -f ：显示 DATE FILE文件中的每行时间（我也不懂）</span></span><br><span class="line"><span class="ruby"> -r ：显示 文件/文件夹 最后修改时间</span></span><br><span class="line"><span class="ruby"> -s ：设置 系统时间</span></span><br><span class="line"><span class="ruby"> -u ：显示 UTC时间</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 时间格式</span></span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="string">%% - 显示字符%</span></span></span><br><span class="line"><span class="ruby">%a - 星期几的缩写(Sun..Sat)</span></span><br><span class="line"><span class="ruby">%A - 星期几的完整名称（Sunday...Saturday）</span></span><br><span class="line"><span class="ruby">%b - 月份的缩写(Jan..Dec)</span></span><br><span class="line"><span class="ruby">%B - 月份的完整名称(January..December)</span></span><br><span class="line"><span class="ruby">%c - 日期与时间。只输入date指令也会显示同样的结果</span></span><br><span class="line"><span class="ruby">%C - 世纪(年份除<span class="number">100</span>后去整) [<span class="number">00</span>-<span class="number">99</span>]</span></span><br><span class="line"><span class="ruby">%d - 日期(以<span class="number">01</span>-<span class="number">31</span>来表示)。</span></span><br><span class="line"><span class="ruby">%D - 日期(含年月日)。</span></span><br><span class="line"><span class="ruby">%e - 一个月的第几天 ( <span class="number">1</span>..<span class="number">31</span>)</span></span><br><span class="line"><span class="ruby">%F - 日期，同%Y-%m-%d</span></span><br><span class="line"><span class="ruby">%g - 年份(yy)</span></span><br><span class="line"><span class="ruby">%G - 年份(yyyy)</span></span><br><span class="line"><span class="ruby">%h - 同%b</span></span><br><span class="line"><span class="ruby">%H - 小时(<span class="number">00</span>..<span class="number">23</span>)</span></span><br><span class="line"><span class="ruby">%I - 小时(<span class="number">01</span>..<span class="number">12</span>)</span></span><br><span class="line"><span class="ruby">%j - 一年的第几天(<span class="number">001</span>..<span class="number">366</span>)</span></span><br><span class="line"><span class="ruby">%k - 小时( <span class="number">0</span>..<span class="number">23</span>)</span></span><br><span class="line"><span class="ruby">%l - 小时( <span class="number">1</span>..<span class="number">12</span>)</span></span><br><span class="line"><span class="ruby">%m - 月份(<span class="number">01</span>..<span class="number">12</span>)</span></span><br><span class="line"><span class="ruby">%M - 分钟(<span class="number">00</span>..<span class="number">59</span>)</span></span><br><span class="line"><span class="ruby">%n - 换行</span></span><br><span class="line"><span class="ruby">%N - 纳秒(<span class="number">000000000</span>..<span class="number">999999999</span>)</span></span><br><span class="line"><span class="ruby">%p - AM <span class="keyword">or</span> PM</span></span><br><span class="line"><span class="ruby">%P - am <span class="keyword">or</span> pm</span></span><br><span class="line"><span class="ruby">%r - <span class="number">12</span>小时制时间(<span class="symbol">hh:</span><span class="symbol">mm:</span>ss [AP]M)</span></span><br><span class="line"><span class="ruby">%R - <span class="number">24</span>小时制时间(<span class="symbol">hh:</span>mm)</span></span><br><span class="line"><span class="ruby">%s - 从<span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span> <span class="number">1970</span>-<span class="number">01</span>-<span class="number">01</span> UTC开始的秒数</span></span><br><span class="line"><span class="ruby">%S - 秒(<span class="number">00</span>..<span class="number">60</span>)</span></span><br><span class="line"><span class="ruby">%t - 制表符</span></span><br><span class="line"><span class="ruby">%T - <span class="number">24</span>小时制时间(<span class="symbol">hh:</span><span class="symbol">mm:</span>ss)</span></span><br><span class="line"><span class="ruby">%u - 一周的第几天(<span class="number">1</span>..<span class="number">7</span>); <span class="number">1</span> 表示星期一</span></span><br><span class="line"><span class="ruby">%U - 一年的第几周，周日为每周的第一天(<span class="number">00</span>..<span class="number">53</span>)</span></span><br><span class="line"><span class="ruby">%V - 一年的第几周，周一为每周的第一天 (<span class="number">01</span>..<span class="number">53</span>)</span></span><br><span class="line"><span class="ruby">%w - 一周的第几天 (<span class="number">0</span>..<span class="number">6</span>); <span class="number">0</span> 代表周日</span></span><br><span class="line"><span class="ruby">%W - 一年的第几周，周一为每周的第一天(<span class="number">00</span>..<span class="number">53</span>)</span></span><br><span class="line"><span class="ruby">%x - 日期(mm/dd/yy)</span></span><br><span class="line"><span class="ruby">%X - 时间(%<span class="symbol">H:</span>%<span class="symbol">M:</span>%S)</span></span><br><span class="line"><span class="ruby">%y - 年份(<span class="number">00</span>..<span class="number">99</span>)</span></span><br><span class="line"><span class="ruby">%Y - 年份 (<span class="number">1970</span>…)</span></span><br><span class="line"><span class="ruby">%z - RFC-<span class="number">2822</span> 风格数字格式时区(-<span class="number">0500</span>)</span></span><br><span class="line"><span class="ruby">%Z - 时区(e.g., EDT), 无法确定时区则为空</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 date --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-10"><a href="#使用示例：-10" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 显示 当前系统时间</span></span><br><span class="line">date</span><br><span class="line"><span class="meta"># 输出：Wed Apr 5 12:38:44 CST 2017</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 显示当前系统的 UTC时间</span></span><br><span class="line">date -u</span><br><span class="line"><span class="meta"># 输出：Wed Apr 5 04:30:06 UTC 2017</span></span><br><span class="line"><span class="meta"># 显示 log.txt 文件的最后修改时间</span></span><br><span class="line">date -r log.txt</span><br><span class="line"><span class="meta"># 显示 当前日期的年份</span></span><br><span class="line">date +%Y</span><br><span class="line"><span class="meta"># 输出：2017</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 显示 当前日期的月份</span></span><br><span class="line">date +%m</span><br><span class="line"><span class="meta"># 输出：4</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 显示 各种格式类型的日期</span></span><br><span class="line">date +%D</span><br><span class="line"><span class="meta"># 输出：04/05/17</span></span><br><span class="line"> </span><br><span class="line">date +%Y-%m-%d</span><br><span class="line"><span class="meta"># 输出：2017-04-05</span></span><br><span class="line"> </span><br><span class="line">date +%m/%d/%y</span><br><span class="line"><span class="meta"># 输出：04/05/17</span></span><br><span class="line"> </span><br><span class="line">date +%m/%d/%Y</span><br><span class="line"><span class="meta"># 输出：04/05/2017</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 显示 Unix时间戳</span></span><br><span class="line">date +%s</span><br><span class="line"><span class="meta"># 输出：1491367399</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 显示一个完整的时间（年、月、日、小时、分钟、秒钟、周几 时区）</span></span><br><span class="line">date <span class="string">"+%Y-%m-%d %H:%M:%S %u %Z"</span></span><br><span class="line"><span class="meta"># 输出：2017-04-05 12:12:15 3 CST</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 设置 系统时间（年、月、日）</span></span><br><span class="line">date -s <span class="string">"2017-04-05"</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 设置 系统时间（小时、分钟、秒钟）</span></span><br><span class="line">date -s <span class="string">"10:29:05"</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 设置 系统时间（年、月、日、小时、分钟、秒钟）</span></span><br><span class="line">date -s <span class="string">"2017-04-05 10:29:05"</span></span><br><span class="line"> </span><br><span class="line"><span class="meta"># 更多的命令可以用 date --help 来查看。</span></span><br></pre></td></tr></table></figure>
<h3 id="一个修改时区为上海（北京）时区的方法："><a href="#一个修改时区为上海（北京）时区的方法：" class="headerlink" title="一个修改时区为上海（北京）时区的方法："></a>一个修改时区为上海（北京）时区的方法：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/usr/</span>share<span class="regexp">/zoneinfo/</span>Asia<span class="regexp">/Shanghai /</span>etc<span class="regexp">/localtime</span></span><br></pre></td></tr></table></figure>
<p>然后再用 date 查看时间，就会发现时区变为 CST 了。</p>
<h2 id="uname-获取操作系统信息"><a href="#uname-获取操作系统信息" class="headerlink" title="uname 获取操作系统信息"></a>uname 获取操作系统信息</h2><h3 id="参数介绍：-9"><a href="#参数介绍：-9" class="headerlink" title="参数介绍："></a>参数介绍：</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">a：显示 全部信息</span></span><br><span class="line"><span class="ruby">-m：显示 系统位数</span></span><br><span class="line"><span class="ruby">-n：显示 主机名称</span></span><br><span class="line"><span class="ruby">-r：显示 操作系统的发行编号</span></span><br><span class="line"><span class="ruby">-s：显示 操作系统的名称</span></span><br><span class="line"><span class="ruby">-v：显示 操作系统的版本</span></span><br><span class="line"><span class="ruby">-p：输出 处理器类型 或<span class="string">"unknown"</span></span></span><br><span class="line"><span class="ruby">-i：输出 硬件平台 或<span class="string">"unknown"</span></span></span><br><span class="line"><span class="ruby">-o：输出 操作系统名称</span></span><br><span class="line"><span class="ruby"> </span></span><br><span class="line"><span class="ruby"><span class="comment"># 更多的命令可以用 uname --help 来查看。</span></span></span><br></pre></td></tr></table></figure>
<h3 id="使用示例：-11"><a href="#使用示例：-11" class="headerlink" title="使用示例："></a>使用示例：</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@doub.io:~<span class="comment"># uname       #在使用 uname 的时候，相当于是使用 uname -s</span></span><br><span class="line">Linux</span><br><span class="line">root@doub.io:~<span class="comment"># uname -a</span></span><br><span class="line">Linux doub.io <span class="number">2.6</span><span class="number">.32</span><span class="number">-042</span>stab120<span class="number">.6</span> <span class="comment">#1 SMP Thu Oct 27 16:59:03 MSK 2016 i686 GNU/Linux</span></span><br><span class="line">root@doub.io:~<span class="comment"># uname -m       #输出一般是64位: x86_64 / 32位: i386 或分支 i686 </span></span><br><span class="line">i686</span><br><span class="line">root@doub.io:~<span class="comment"># uname -n</span></span><br><span class="line">doub.io</span><br><span class="line">root@doub.io:~<span class="comment"># uname -r</span></span><br><span class="line"><span class="number">2.6</span><span class="number">.32</span><span class="number">-042</span>stab120<span class="number">.6</span></span><br><span class="line">root@doub.io:~<span class="comment"># uname -s</span></span><br><span class="line">Linux</span><br><span class="line">root@doub.io:~<span class="comment"># uname -v</span></span><br><span class="line"><span class="comment">#1 SMP Thu Oct 27 16:59:03 MSK 2016</span></span><br><span class="line">root@doub.io:~<span class="comment"># uname -p</span></span><br><span class="line">unknown</span><br><span class="line">root@doub.io:~<span class="comment"># uname -i</span></span><br><span class="line">unknown</span><br><span class="line">root@doub.io:~<span class="comment"># uname -o</span></span><br><span class="line">GNU/Linux</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>此文转载于:<a href="https://doub.io/linux-jc8/" target="_blank" rel="noopener">doubi-Linux 常用命令简单介绍 —— 基础篇</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 精华 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[bat批处理文件常见命令]]></title>
      <url>/bat%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<blockquote>
<p><code>echo</code>:表示显示此命令后的字符</p>
<p><code>tiltle</code>:设置窗口的标题</p>
<p><code>echo off</code>:表示在此语句后所有运行的命令都不显示命令行本身</p>
<p><code>color</code>:设置窗体的颜色，颜色属性由两个十六进制数字组成，第一个对应背景，第二个对应前景。比如<code>color 17</code>表示背景为蓝色，前景为白色。</p>
<p><code>@</code>:与<code>echo off</code>相象，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行（只能影响当前行）。</p>
<p><code>pause</code>:运行此句会暂停批处理的执行并在屏幕上显示<code>Press any key to continue…</code>的提示，等待用户按任意键后继续</p>
<p><code>rem</code>:表示此命令后的字符为注释，不执行，只是给自己今后参考用的（相当于程序中的注释）或者使用 %注释的内容% 来注释单行内容</p>
<p><code>%[1-9]</code>:表示参数，参数是指在运行批处理文件时在文件名后加的以空格（或者<code>Tab</code>）分隔的字符串</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[一键安装最新内核并开启 BBR 脚本]]></title>
      <url>/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E5%86%85%E6%A0%B8%E5%B9%B6%E5%BC%80%E5%90%AF-BBR-%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<blockquote>
<p>最近，Google 开源了其<code>TCP BBR</code>拥塞控制算法，并提交到了<code>Linux</code>内核，从 4.9 开始，<code>Linux</code>内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。</p>
<p>根据实地测试，在部署了最新版内核并开启了<code>TCP BBR</code>的机器上，网速甚至可以提升好几个数量级。</p>
</blockquote>
<h1 id="本脚本适用环境"><a href="#本脚本适用环境" class="headerlink" title="本脚本适用环境"></a>本脚本适用环境</h1><ul>
<li>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</li>
<li>虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等</li>
<li>内存要求：≥128M</li>
</ul>
<h1 id="关于本脚本"><a href="#关于本脚本" class="headerlink" title="关于本脚本"></a>关于本脚本</h1><ul>
<li>1、<strong>本文出处</strong>:<a href="https://teddysun.com/489.html" target="_blank" rel="noopener">秋水逸冰</a></li>
<li>2、本脚本已在<code>Vultr</code>上的<code>VPS</code>全部测试通过。</li>
<li>3、当脚本检测到<code>VPS</code>的虚拟方式为<code>OpenVZ</code>时，会提示错误，并自动退出安装。</li>
<li>4、脚本运行完重启发现开不了机的，打开<code>VPS</code>后台控制面板的<code>VNC</code>, 开机卡在<code>grub</code>引导, 手动选择内核即可。</li>
<li>4、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</li>
</ul>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用<code>root</code>用户登录，运行以下命令：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//github.<span class="keyword">com</span>/teddysun/across/raw/master/bbr.<span class="keyword">sh</span> &amp;&amp; chmod +<span class="keyword">x</span> bbr.<span class="keyword">sh</span> &amp;&amp; bash bbr.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<p>安装完成后，脚本会提示需要重启<code>VPS</code>，输入<code>y</code>并回车后重启。<br>重启完成后，进入<code>VPS</code>，验证一下是否成功安装最新内核并开启<code>TCP BBR</code>，输入以下命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看内核版本，含有 4.14.5 就表示 OK 了</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ————————————</span></span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回值一般为：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> net.ipv4.tcp_available_congestion_control = bbr cubic reno</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ————————————</span></span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回值一般为：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> net.ipv4.tcp_congestion_control = bbr</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ————————————</span></span><br><span class="line">sysctl net.core.default_qdisc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回值一般为：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> net.core.default_qdisc = fq</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ————————————</span></span><br><span class="line">lsmod | grep bbr</span><br><span class="line"><span class="meta">#</span><span class="bash"> 返回值有 tcp_bbr 模块即说明bbr已启动。</span></span><br></pre></td></tr></table></figure>
<p>注意：<strong>并不是所有的<code>VPS</code>都会有此返回值，若没有也属正常</strong>。</p>
<h2 id="内核升级方法"><a href="#内核升级方法" class="headerlink" title="内核升级方法"></a>内核升级方法</h2><p>如果是<code>CentOS</code>系统，执行如下命令即可升级内核：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="attribute">--enablerepo</span>=elrepo-kernel -y install kernel-ml kernel-ml-devel</span><br></pre></td></tr></table></figure>
<p><code>CentOS 6</code>的话，执行命令：</p>
<figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="symbol">'s</span>/^<span class="keyword">default</span>=.*/<span class="keyword">default</span>=<span class="number">0</span>/g' /boot/grub/grub.conf</span><br></pre></td></tr></table></figure>
<p><code>CentOS 7</code>的话，执行命令：</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-<span class="keyword">set</span>-<span class="keyword">default</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 代理 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[建站初衷]]></title>
      <url>/171124/</url>
      <content type="html"><![CDATA[<h1 id="前-言"><a href="#前-言" class="headerlink" title="前 言"></a>前 言</h1><blockquote>
<p>这篇文章其实在2天前就应该被发表出来的，但由于第一次使用<code>Hexo</code>,对于连各种命令都看不懂的我，只想在发表文章前，更进一步的把<code>Hexo</code>理解透彻（直白一点就是先搞懂）！</p>
</blockquote>
<h1 id="建站初衷"><a href="#建站初衷" class="headerlink" title="建站初衷"></a>建站初衷</h1><ul>
<li><p>平时使用Blog都是用于转载对自己有用的帖子，起到收录的作用，毕竟好的帖子很值得收藏，主要的原因是记性不好，方便自己今后查看而已，用Blog作为社交平台我历来都没有想过，毕竟兴趣少，技术差，现在搭建<code>Hexo</code>也是此观点，方便自己今后查阅而已！</p>
</li>
<li><p>用<code>Hexo</code>的大部分人，我知道都是在<code>Github</code>上介绍自己项目的<strong>程序员</strong>，而我不是程序员，不光不是，悲催的是连代码都看不懂，说到这儿…心里有万只羊驼奔驰而过；</p>
</li>
<li><p>为啥会选择使用<code>Hexo</code>,主要是无意间看到的<a href="http://onlytimer.com/2017/09/20/Mac%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EGitHub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Mac上搭建基于GitHub的Hexo博客</a>这篇文章后感触很深，也是因为这篇文章的介绍，然后自己找了一些资料来看，又无意间看到下面的内容，让我为搭建<code>Hexo</code>充满了激情；</p>
</li>
</ul>
<blockquote>
<p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写;</p>
<p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客;</p>
<p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管。</p>
</blockquote>
<ul>
<li><p>我很“庆幸”，第二个阶段直接跳过了，在这当中挣扎了很久(<em>若干年</em>)，终究没有实现。为啥？还不是搞不懂，看教程都感觉好复杂的感觉，怕自己花钱后各种没耐心，所以就日复一日年复一年的在第一阶段徘徊到现在咯；</p>
</li>
<li><p>或许有人会问，连代码都看不懂，如何搭建完成并在这当中发布文章呢？</p>
</li>
</ul>
<blockquote>
<p>1、拿这里当项目介绍的各位大咖会认为<code>Hexo</code>的搭建如同吃饭睡觉般简单，但我确实是零基础，当中的曲折程度只能用<strong>艰难</strong>来形容了；</p>
<p>2、搭建完成以为就像<code>Word</code>那样打字、排版、发布！但现实往往是很残酷的，在Mac上搭建好后，又发现了一个问题，我从哪里发布文章呢？Blog的后台从那里进去呢？我要修改主题的话从那里进行呢？等把相关的内容搜索看了一遍后，我又蒙圈了…我所疑惑的所有问题，都TM和搭建一样，还是和代码脱离不了关系啊，行吧！学…修改主题、配置信息、学习<code>Markdown</code>…;</p>
<p>3、就从<a href="http://onlytimer.com/2017/09/20/Mac%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8EGitHub%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Mac上搭建基于GitHub的Hexo博客</a>给我启示的这篇教程来看，事后觉得确实不是太难，但在以前我是不会去看类似的教程的，只要有多多的代码，马上关掉浏览窗口；</p>
<p>4、有这个勇气看完搭建<code>Hexo</code>的教程，最终并搭建成功,还得益于之前自己亲手搭建的<code>vps</code>服务器，刚开始也是各种不懂，但自己要用啊，硬着头皮找资料，看教程，也就2小时的时间就弄好了；曾经觉得触不可及的东西，亲自动手后，不说学到多少，光事成之后喜悦感和成就感，都是无法用言语来表达的；</p>
</blockquote>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><ul>
<li>开头就说过了，我用Blog的目的也只是方便自己今后查阅相关资料而已，现在发表这篇文章的出发点也是如此；</li>
<li>有合适的教程我也会转载或整理后发布出来；</li>
<li>最近这段时间废寝忘食的学、做…很好的印证了一句话：活到老.学到老</li>
</ul>
<blockquote>
<p>2017年11月24 晚</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
